{"version":3,"sources":["@ui-kit/layouts/SFlex.tsx","@ui-kit/utilities/LoadingScreen.tsx","@ui-kit/dialogs/AlertDialog.tsx","@ui-kit/dialogs/ConfirmationDialog.tsx","@ui-kit/dialogs/FileInputDialog.tsx","@ui-kit/dialogs/InputDialog.tsx","theme.ts","@ui-kit/inputs/ActionBarItem.tsx","@ui-kit/action-bar/ActionBarContainer.tsx","database/DatabaseContext.ts","database/hooks/useCollection.ts","database/Database.ts","database/components/DatabaseError.tsx","@ui-kit/dialogs/PasswordInputDialog.tsx","database/DatabaseProvider.tsx","database/scrap/mappers.ts","database/scrap/useScrapOperations.ts","pages/scrap-list/components/ScrapList.columns.tsx","pages/scrap-list/components/ScrapList.tsx","pages/scrap-list/components/DesktopActionBar.tsx","pages/scrap-list/components/MobileActionBar.tsx","pages/scrap-list/ScrapListPage.tsx","database/scrap/useAllScrapsSubscription.ts","utils/getShortId.ts","pages/scrap/components/ActionBar.tsx","pages/scrap/components/MarkdownView.tsx","pages/scrap/components/ErrorBoundary.jsx","pages/scrap/components/ObjectView.tsx","components/editor-box/EditorBox.tsx","pages/scrap/components/EditView.tsx","pages/scrap/components/Labels.tsx","pages/scrap/components/Title.tsx","pages/scrap/ScrapPage.tsx","database/scrap/useScrapSubscription.ts","resources/brand-logo.png","nav/components/NavBrand.tsx","nav/SideNav.tsx","features/counter/counterSlice.ts","app/store.ts","App.tsx","database/scrap/scraps.collection.ts","serviceWorker.ts","index.tsx"],"names":["styled","div","LoadingScreen","Stack","style","flex","horizontalAlign","verticalAlign","Spinner","label","modalProps","isBlocking","styles","main","maxWidth","AlertDialog","title","text","hidden","onSubmit","onDismiss","dialogContentProps","useMemo","type","DialogType","normal","closeButtonAriaLabel","subText","Dialog","DialogFooter","PrimaryButton","onClick","fdAlert","reactModal","show","ConfirmationDialog","DefaultButton","fdConfirm","FileInputDialog","multiple","accept","useState","isFileDialogOpen","setIsFileDialogOpen","uploads","setUploads","uploadInput","useRef","useEffect","handleFocusBack","debounce","window","addEventListener","removeEventListener","current","click","handleChange","a","target","files","id","ref","display","onChange","fdFileInput","InputDialog","placeholder","defaultValue","input","handleSubmit","value","TextField","componentRef","onKeyPress","key","Key","Enter","fdInput","defaultFontStyle","fontFamily","fontWeight","darkTheme","createTheme","isInverted","palette","themePrimary","themeLighterAlt","themeLighter","themeLight","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","neutralLighterAlt","neutralLighter","neutralLight","neutralQuaternaryAlt","neutralQuaternary","neutralTertiaryAlt","neutralTertiary","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","black","white","lightTheme","initializeIcons","sizing","standard","compact","standardIcon","compactIcon","ActionBarItem","icon","name","CommandBarButton","minHeight","iconProps","iconName","ActionBarContainer","children","horizontal","useTheme","tokens","childrenGap","root","padding","borderBottom","DatabaseContext","createContext","_database","_collections","collections","addSchemas","Error","useCollection","collection","useContext","addRxPlugin","pouchdbAdapterMemory","pouchdbAdapterIdb","RxDBValidateZSchemaPlugin","RxDBQueryBuilderPlugin","Database","this","schemas","addCollections","databaseName","inMemory","password","createRxDatabase","adapter","ignoreDuplicate","database","DatabaseError","message","onReset","displayedMessage","includes","Icon","color","red","Text","variant","textAlign","IconButton","PasswordInputDialog","requirements","minLength","minLowercase","minUppercase","minNumbers","minSymbols","okDisabled","setOkDisabled","undefined","canRevealPassword","onGetErrorMessage","isStrongPassword","length","disabled","passwordInput","DatabaseProvider","options","Date","getTime","reload","setReload","db","setDb","error","setError","getDatabase","init","then","catch","Provider","toScrapEntity","created","starred","locked","content","contentType","archived","groupName","labels","useScrapOperations","bulkInsert","scraps","deleteMany","save","scrap","upsert","deleteOne","find","selector","remove","where","$in","map","classNames","mergeStyleSets","fileIconHeaderIcon","fontSize","fileIconCell","selectors","height","width","visibility","fileIconImg","maxHeight","controlWrapper","flexWrap","exampleToggle","marginBottom","marginRight","selectionDetails","icons","markdown","json","yaml","columns","className","iconClassName","isIconOnly","fieldName","minWidth","onRender","FontIcon","join","toLocaleString","ScrapList","onOpen","onSelectionChange","selectionEnabled","selection","Selection","getKey","onSelectionChanged","getSelection","overflowY","DetailsList","items","onItemInvoked","selectionMode","SelectionMode","none","userSelect","DesktopActionBar","onAdd","onRename","onDelete","onToggleSelection","onExport","onImport","onFilter","selectionCount","paddingRight","SearchBox","size","onSearch","onClear","MobileActionBar","underlined","eachSeries","Aigle","ScrapListPage","results","setResults","sort","$","subscribe","it","useAllScrapsSubscription","useHistory","push","location","currentSelection","setCurrentSelection","useBoolean","multiSelect","toggleMultiSelect","toggle","filterBy","setFilterBy","listedScraps","filter","handleAdd","uuidv4","split","handleRename","selectedScrap","handleDelete","handleOpen","handleExport","encryptedContent","AES","encrypt","JSON","stringify","download","handleImport","file","decryptedContent","decrypt","parse","enc","Utf8","errorStr","e","ActionBar","useMediaQuery","filterText","Breadcrumb","onSave","MarkdownView","renderers","code","language","atomOneDark","atomOneLight","renderedContent","plugins","gfm","ErrorBoundary","props","state","hasError","errorInfo","console","log","verticalFill","React","Component","getVariant","depth","ObjectField","object","paddingTop","capitalCase","Separator","v","k","isObject","KeyValueField","match","Toggle","checked","readOnly","multiline","toString","rows","clamp","onRenderLabel","Label","TooltipHost","directionalHint","DirectionalHint","bottomCenter","copyToClipboard","ObjectView","contentObject","YAML","EditorBox","onLanguageChange","onChanges","editorRef","monacoRef","trigger","setTrigger","_eRef","_mRef","action","addAction","contextMenuGroupId","contextMenuOrder","keybindings","KeyMod","CtrlCmd","Shift","KeyCode","KEY_F","run","editor","setValue","format","getValue","parser","babel","dispose","theme","wordWrap","fontLigatures","multiCursorModifier","lineNumbers","minimap","enabled","scrollBeyondLastLine","scrollbar","verticalScrollbarSize","verticalSliderSize","onMount","monaco","selectLanguageOptions","EditView","onContentChange","Dropdown","selectedKey","event","option","pickerSuggestionsProps","suggestionsHeaderText","Labels","availableLabels","TagPicker","selectedItems","onResolveSuggestions","matchingLabels","startsWith","Title","field","ScrapTabs","Pivot","ScrapPage","result","setResult","findOne","useScrapSubscription","useParams","liveTitle","setLiveTitle","liveContent","setLiveContent","setContentType","setLabels","handleSave","overflow","PivotItem","headerText","itemIcon","BrandImage","img","BrandStack","BrandName","NavBrand","src","brandLogo","alt","SideNav","isOpen","navLinkGroups","links","Panel","onRenderHeader","PanelType","smallFixedNear","isLightDismiss","commands","marginTop","navigation","justifyContent","alignItems","Nav","groups","counterSlice","createSlice","initialState","reducers","increment","decrement","incrementByAmount","payload","actions","store","configureStore","reducer","counter","counterReducer","SCHEMAS","schema","version","description","properties","primary","default","uniqueItems","required","indexes","encrypted","attachments","DATABASE_OPTS","AppContainer","Main","App","openPanel","setTrue","dismissPanel","setFalse","prefersDark","query","setTheme","loadTheme","ThemeProvider","path","component","position","bottom","left","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dacf6c8a.chunk.js","sourcesContent":["import styled from \"styled-components\"\n\nexport const SFlex = styled.div`\n  display: flex;\n  flex: auto;\n  overflow: inherit;\n`\n","import React from \"react\"\nimport { Spinner, Stack } from \"@fluentui/react\"\n\nexport const LoadingScreen: React.FC = () => {\n  return (\n    <Stack style={{ flex: \"auto\" }} horizontalAlign=\"center\" verticalAlign=\"center\">\n      <Spinner label=\"Please wait...\" />\n    </Stack>\n  )\n}\n","import React, { useMemo } from \"react\"\n\nimport { Dialog, DialogFooter, DialogType, PrimaryButton } from \"@fluentui/react\"\nimport reactModal from \"@prezly/react-promise-modal\"\nimport { AwaitableDialogProps } from \"../types\"\n\nconst dialogStyles = { main: { maxWidth: 450 } }\nconst modalProps = {\n  isBlocking: false,\n  styles: dialogStyles,\n}\n\nexport type IAlertDialog = {\n  title: string\n  text: string\n}\nexport const AlertDialog: React.FC<IAlertDialog & AwaitableDialogProps<boolean>> = ({\n  title,\n  text,\n  hidden,\n  onSubmit,\n  onDismiss,\n}) => {\n  const dialogContentProps = useMemo(\n    () => ({\n      type: DialogType.normal,\n      title,\n      closeButtonAriaLabel: \"Close\",\n      subText: text,\n    }),\n    [text, title]\n  )\n\n  return (\n    <>\n      <Dialog\n        hidden={hidden}\n        onDismiss={onDismiss}\n        dialogContentProps={dialogContentProps}\n        modalProps={modalProps}\n      >\n        <DialogFooter>\n          <PrimaryButton onClick={() => onSubmit(true)} text=\"Ok\" />\n        </DialogFooter>\n      </Dialog>\n    </>\n  )\n}\n\nexport const fdAlert = ({ title, text }: IAlertDialog) =>\n  reactModal(({ show, onSubmit, onDismiss }) => (\n    <AlertDialog\n      title={title}\n      text={text}\n      hidden={!show}\n      onSubmit={onSubmit}\n      onDismiss={onDismiss}\n    />\n  )) as Promise<true>\n","import React, { useMemo } from \"react\"\n\nimport { DefaultButton, Dialog, DialogFooter, DialogType, PrimaryButton } from \"@fluentui/react\"\nimport reactModal from \"@prezly/react-promise-modal\"\nimport { AwaitableDialogProps } from \"../types\"\n\nconst dialogStyles = { main: { maxWidth: 450 } }\nconst modalProps = {\n  isBlocking: false,\n  styles: dialogStyles,\n}\n\nexport type IConfirmationDialog = {\n  title: string\n  text: string\n}\nexport const ConfirmationDialog: React.FC<IConfirmationDialog & AwaitableDialogProps<boolean>> = ({\n  title,\n  text,\n  hidden,\n  onSubmit,\n  onDismiss,\n}) => {\n  const dialogContentProps = useMemo(\n    () => ({\n      type: DialogType.normal,\n      title,\n      closeButtonAriaLabel: \"Close\",\n      subText: text,\n    }),\n    [text, title]\n  )\n\n  return (\n    <>\n      <Dialog\n        hidden={hidden}\n        onDismiss={onDismiss}\n        dialogContentProps={dialogContentProps}\n        modalProps={modalProps}\n      >\n        <DialogFooter>\n          <PrimaryButton onClick={() => onSubmit(true)} text=\"Ok\" />\n          <DefaultButton onClick={onDismiss} text=\"Cancel\" />\n        </DialogFooter>\n      </Dialog>\n    </>\n  )\n}\n\nexport const fdConfirm = ({ title, text }: IConfirmationDialog) =>\n  reactModal(({ show, onSubmit, onDismiss }) => (\n    <ConfirmationDialog\n      title={title}\n      text={text}\n      hidden={!show}\n      onSubmit={onSubmit}\n      onDismiss={onDismiss}\n    />\n  )) as Promise<boolean>\n","import React, { ChangeEvent, useEffect, useRef, useState } from \"react\"\nimport reactModal from \"@prezly/react-promise-modal\"\nimport { debounce } from \"lodash\"\nimport { AwaitableDialogProps } from \"../types\"\n\nexport type IFileInputDialog = {\n  multiple?: boolean\n  accept?: string\n}\nexport const FileInputDialog: React.FC<IFileInputDialog & AwaitableDialogProps<FileList>> = ({\n  multiple,\n  accept,\n  onSubmit,\n  onDismiss,\n}) => {\n  const [isFileDialogOpen, setIsFileDialogOpen] = useState<boolean>(true)\n  const [uploads, setUploads] = useState<FileList>()\n  const uploadInput = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    if (!isFileDialogOpen) {\n      ;(uploads && onSubmit(uploads)) || onDismiss()\n    }\n  }, [isFileDialogOpen, uploads])\n\n  useEffect(() => {\n    // Debounce to ensure the event handler body fires after the upload change event\n    const handleFocusBack = debounce(() => {\n      setIsFileDialogOpen(false)\n    }, 250)\n    window.addEventListener(\"focus\", handleFocusBack)\n    return () => {\n      window.removeEventListener(\"focus\", handleFocusBack)\n    }\n  }, [])\n\n  useEffect(() => {\n    uploadInput.current?.click()\n  }, [])\n\n  const handleChange = async ({ target }: ChangeEvent<HTMLInputElement>) => {\n    target.files && setUploads(target?.files)\n  }\n\n  return (\n    <>\n      <input\n        id=\"file-input-dialog_input\"\n        // @ts-ignore\n        ref={uploadInput}\n        type=\"file\"\n        style={{ display: \"none\" }}\n        multiple={multiple}\n        accept={accept}\n        onChange={handleChange}\n      />\n    </>\n  )\n}\n\nexport const fdFileInput = ({ multiple, accept }: IFileInputDialog) =>\n  reactModal(({ show, onSubmit, onDismiss }) => (\n    <FileInputDialog\n      multiple={multiple}\n      accept={accept}\n      hidden={!show}\n      onSubmit={onSubmit}\n      onDismiss={onDismiss}\n    />\n  )) as Promise<FileList>\n","import React, { useMemo, useRef } from \"react\"\n\nimport {\n  DefaultButton,\n  Dialog,\n  DialogFooter,\n  DialogType,\n  ITextField,\n  PrimaryButton,\n  TextField,\n} from \"@fluentui/react\"\nimport { AwaitableDialogProps } from \"../types\"\nimport reactModal from \"@prezly/react-promise-modal\"\nimport { Key } from \"ts-key-enum\"\n\nconst dialogStyles = { main: { maxWidth: 450 } }\nconst modalProps = {\n  isBlocking: false,\n  styles: dialogStyles,\n}\n\nexport type IInputDialog = {\n  title: string\n  label: string\n  placeholder?: string\n  defaultValue?: string\n}\nexport const InputDialog: React.FC<IInputDialog & AwaitableDialogProps<string>> = ({\n  title,\n  label,\n  placeholder,\n  defaultValue,\n  hidden,\n  onSubmit,\n  onDismiss,\n}) => {\n  const input = useRef<ITextField>()\n  const dialogContentProps = useMemo(\n    () => ({\n      type: DialogType.normal,\n      title,\n      closeButtonAriaLabel: \"Close\",\n    }),\n    [title]\n  )\n\n  const handleSubmit = () => {\n    input.current?.value ? onSubmit(input.current.value) : onSubmit(\"\")\n  }\n\n  return (\n    <>\n      <Dialog\n        hidden={hidden}\n        onDismiss={onDismiss}\n        dialogContentProps={dialogContentProps}\n        modalProps={modalProps}\n      >\n        <TextField\n          // @ts-ignore\n          componentRef={input}\n          label={label}\n          placeholder={placeholder}\n          defaultValue={defaultValue}\n          onKeyPress={({ key }) => key === Key.Enter && handleSubmit()}\n        />\n        <DialogFooter>\n          <PrimaryButton onClick={() => handleSubmit()} text=\"Ok\" />\n          <DefaultButton onClick={onDismiss} text=\"Cancel\" />\n        </DialogFooter>\n      </Dialog>\n    </>\n  )\n}\n\nexport const fdInput = ({ title, label, placeholder, defaultValue }: IInputDialog) =>\n  reactModal(({ show, onSubmit, onDismiss }) => (\n    <InputDialog\n      title={title}\n      label={label}\n      placeholder={placeholder}\n      defaultValue={defaultValue}\n      hidden={!show}\n      onSubmit={onSubmit}\n      onDismiss={onDismiss}\n    />\n  )) as Promise<string>\n","import { createTheme, initializeIcons } from \"@fluentui/react\"\n\nconst defaultFontStyle = {\n  fontFamily:\n    '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n  fontWeight: \"regular\",\n}\n\nexport const darkTheme = createTheme({\n  isInverted: true,\n  defaultFontStyle,\n  palette: {\n    themePrimary: \"#d2d2d2\",\n    themeLighterAlt: \"#d6d6d6\",\n    themeLighter: \"#dbdbdb\",\n    themeLight: \"#e0e0e0\",\n    themeTertiary: \"#e5e5e5\",\n    themeSecondary: \"#eaeaea\",\n    themeDarkAlt: \"#efefef\",\n    themeDark: \"#f4f4f4\",\n    themeDarker: \"#f9f9f9\",\n    neutralLighterAlt: \"#2d2d2d\",\n    neutralLighter: \"#363636\",\n    neutralLight: \"#434343\",\n    neutralQuaternaryAlt: \"#4c4c4c\",\n    neutralQuaternary: \"#535353\",\n    neutralTertiaryAlt: \"#707070\",\n    neutralTertiary: \"#c8c8c8\",\n    neutralSecondary: \"#d0d0d0\",\n    neutralPrimaryAlt: \"#dadada\",\n    neutralPrimary: \"#ffffff\",\n    neutralDark: \"#f4f4f4\",\n    black: \"#f8f8f8\",\n    white: \"#242424\",\n  },\n})\n\nexport const lightTheme = createTheme({\n  isInverted: false,\n  defaultFontStyle,\n  palette: {\n    themePrimary: \"#404040\",\n    themeLighterAlt: \"#f7f7f7\",\n    themeLighter: \"#e0e0e0\",\n    themeLight: \"#c6c6c6\",\n    themeTertiary: \"#8c8c8c\",\n    themeSecondary: \"#575757\",\n    themeDarkAlt: \"#393939\",\n    themeDark: \"#303030\",\n    themeDarker: \"#242424\",\n    neutralLighterAlt: \"#f8f8f8\",\n    neutralLighter: \"#f4f4f4\",\n    neutralLight: \"#eaeaea\",\n    neutralQuaternaryAlt: \"#dadada\",\n    neutralQuaternary: \"#d0d0d0\",\n    neutralTertiaryAlt: \"#c8c8c8\",\n    neutralTertiary: \"#595959\",\n    neutralSecondary: \"#373737\",\n    neutralPrimaryAlt: \"#2f2f2f\",\n    neutralPrimary: \"#000000\",\n    neutralDark: \"#151515\",\n    black: \"#0b0b0b\",\n    white: \"#ffffff\",\n  },\n})\n\ninitializeIcons(\"static/media/\")\n\nexport const sizing = {\n  height: { standard: \"42px\", compact: \"38px\", standardIcon: \"26px\", compactIcon: \"22px\" },\n  width: { standard: \"42px\", compact: \"38px\", standardIcon: \"26px\", compactIcon: \"22px\" },\n}\n","import React from \"react\"\nimport { CommandBarButton } from \"@fluentui/react\"\nimport { sizing } from \"../../theme\"\n\nexport type IActionBarItem = {\n  icon: string\n  name: string\n  onClick: () => void\n}\nexport const ActionBarItem: React.FC<IActionBarItem> = ({ icon, name, onClick }) => {\n  return (\n    <CommandBarButton\n      style={{ minHeight: sizing.height.standard }}\n      iconProps={{ iconName: icon }}\n      text={name}\n      onClick={onClick}\n    />\n  )\n}\n","import React from \"react\"\nimport { Stack } from \"@fluentui/react\"\nimport { useTheme } from \"@fluentui/react-theme-provider\"\n\nexport type IActionBar = {\n  horizontal?: boolean\n}\nexport const ActionBarContainer: React.FC<IActionBar> = ({ children, horizontal = true }) => {\n  const { palette } = useTheme()\n\n  return (\n    <Stack\n      horizontal={horizontal}\n      tokens={{ childrenGap: \"0.5rem\" }}\n      styles={{\n        root: {\n          padding: \"0.5rem\",\n          borderBottom: `${palette.neutralLight} solid 1px`,\n        },\n      }}\n    >\n      {children}\n    </Stack>\n  )\n}\n","import { createContext } from \"react\"\nimport { Database } from \"./Database\"\n\nexport const DatabaseContext = createContext<Database>({\n  // @ts-ignore\n  _database: null,\n  _collections: {},\n  collections: {},\n  async addSchemas(): Promise<void> {\n    throw new Error(\"Context Not Initialized, ensure a valid Database is passed to the Provider\")\n  },\n})\n","import { useContext } from \"react\"\nimport { DatabaseContext } from \"../DatabaseContext\"\nimport { RxCollection } from \"rxdb\"\n\n/**\n * Use the given collection and return the RxCollection instance so that collection operations\n * can be used\n *\n * @example\n *  const collection: RxCollection<Theatre> = useCollection<Theatre>(\"theatres\")\n *\n * @param collection\n */\nexport const useCollection = <T>(collection: string): RxCollection<T> => {\n  const { collections } = useContext(DatabaseContext)\n  return collections[collection]\n}\n","import { addRxPlugin, createRxDatabase, RxCollection, RxDatabase } from \"rxdb\"\nimport { RxCollectionCreatorBase } from \"rxdb/dist/types/types\"\nimport { RxDBValidateZSchemaPlugin } from \"rxdb/plugins/validate-z-schema\"\nimport { RxDBQueryBuilderPlugin } from \"rxdb/plugins/query-builder\"\nimport pouchdbAdapterMemory from \"pouchdb-adapter-memory\"\nimport pouchdbAdapterIdb from \"pouchdb-adapter-idb\"\n\naddRxPlugin(pouchdbAdapterMemory)\naddRxPlugin(pouchdbAdapterIdb)\naddRxPlugin(RxDBValidateZSchemaPlugin)\naddRxPlugin(RxDBQueryBuilderPlugin)\n\nexport class Database {\n  private _database: RxDatabase\n\n  private _collections: { [p: string]: RxCollection } = {}\n\n  get collections() {\n    return this._collections\n  }\n\n  constructor(_database: RxDatabase) {\n    this._database = _database\n  }\n\n  async addSchemas(schemas: Record<string, RxCollectionCreatorBase>) {\n    this._collections = await this._database.addCollections(schemas)\n  }\n\n  static async getDatabase(\n    databaseName: string,\n    { inMemory = false, password }: { inMemory: boolean; password?: string }\n  ) {\n    const database = await createRxDatabase({\n      name: databaseName,\n      adapter: inMemory ? \"memory\" : \"idb\",\n      ignoreDuplicate: true,\n      password,\n    })\n    return new Database(database)\n  }\n}\n","import React, { useMemo } from \"react\"\nimport { Icon, IconButton, Stack, Text } from \"@fluentui/react\"\nimport { useTheme } from \"@fluentui/react-theme-provider\"\n\nexport const DatabaseError: React.FC<{ message: string; onReset: () => void }> = ({\n  message,\n  onReset,\n}) => {\n  const { palette } = useTheme()\n  const displayedMessage = useMemo(() => {\n    if (message.includes(\"another instance on this adapter has a different password\")) {\n      return \"Invalid Password\"\n    }\n    return message\n  }, [message])\n\n  return (\n    <Stack\n      horizontal\n      horizontalAlign=\"center\"\n      verticalAlign=\"center\"\n      style={{ flex: \"auto\" }}\n      tokens={{ childrenGap: \"0.5rem\" }}\n    >\n      <Icon iconName=\"Warning\" style={{ color: palette.red }} />\n      <Text variant=\"mediumPlus\" style={{ textAlign: \"center\" }}>\n        {displayedMessage}\n      </Text>\n      <IconButton\n        iconProps={{ iconName: \"Refresh\" }}\n        onClick={() => {\n          onReset()\n        }}\n      />\n    </Stack>\n  )\n}\n","import React, { useMemo, useRef, useState } from \"react\"\nimport isStrongPassword from \"validator/lib/isStrongPassword\"\n\nimport {\n  Dialog,\n  DialogFooter,\n  DialogType,\n  ITextField,\n  PrimaryButton,\n  TextField,\n} from \"@fluentui/react\"\nimport { AwaitableDialogProps } from \"../types\"\nimport reactModal from \"@prezly/react-promise-modal\"\nimport { Key } from \"ts-key-enum\"\n\nconst dialogStyles = { main: { maxWidth: 450 } }\nconst modalProps = {\n  isBlocking: false,\n  styles: dialogStyles,\n}\n\nexport type IPasswordInputDialog = {\n  title: string\n  label: string\n  requirements?: {\n    minLength?: number\n    minLowercase?: number\n    minUppercase?: number\n    minNumbers?: number\n    minSymbols?: number\n  }\n}\nexport const PasswordInputDialog: React.FC<IPasswordInputDialog & AwaitableDialogProps<string>> = ({\n  title,\n  label,\n  requirements = {\n    minLength: 9,\n    minLowercase: 2,\n    minUppercase: 2,\n    minNumbers: 0,\n    minSymbols: 1,\n  },\n  hidden,\n  onSubmit,\n}) => {\n  const [okDisabled, setOkDisabled] = useState(true)\n  const input = useRef<ITextField>()\n  const dialogContentProps = useMemo(\n    () => ({\n      type: DialogType.normal,\n      title,\n      closeButtonAriaLabel: \"Close\",\n    }),\n    [title]\n  )\n\n  const handleSubmit = () => {\n    input.current?.value ? onSubmit(input.current.value) : onSubmit(\"\")\n  }\n\n  const getErrorMessage = (value: string): string | undefined => {\n    const result = isStrongPassword(value, requirements)\n    if (!result) {\n      setOkDisabled(true)\n      if (value.length > 2) return \"Weak Password!\"\n    } else {\n      setOkDisabled(false)\n    }\n  }\n\n  return (\n    <>\n      <Dialog\n        hidden={hidden}\n        onDismiss={undefined}\n        dialogContentProps={dialogContentProps}\n        modalProps={modalProps}\n      >\n        <TextField\n          type=\"password\"\n          canRevealPassword\n          // @ts-ignore\n          componentRef={input}\n          label={label}\n          onKeyPress={({ key }) => key === Key.Enter && !okDisabled && handleSubmit()}\n          onGetErrorMessage={getErrorMessage}\n        />\n        <DialogFooter>\n          <PrimaryButton onClick={() => handleSubmit()} text=\"Ok\" disabled={okDisabled} />\n        </DialogFooter>\n      </Dialog>\n    </>\n  )\n}\n\nexport const passwordInput = ({ title, label }: IPasswordInputDialog) =>\n  reactModal(({ show, onSubmit, onDismiss }) => (\n    <PasswordInputDialog\n      title={title}\n      label={label}\n      hidden={!show}\n      onSubmit={onSubmit}\n      onDismiss={onDismiss}\n    />\n  )) as Promise<string>\n","import React, { useEffect, useState } from \"react\"\nimport { Database } from \"./Database\"\nimport { DatabaseError } from \"./components\"\nimport { DatabaseContext } from \"./DatabaseContext\"\nimport { LoadingScreen } from \"../@ui-kit\"\nimport { RxCollectionCreatorBase } from \"rxdb/dist/types/types\"\nimport { passwordInput } from \"../@ui-kit/dialogs/PasswordInputDialog\"\n\nexport const DatabaseProvider: React.FC<{\n  databaseName: string\n  schemas: Record<string, RxCollectionCreatorBase>\n  options: { inMemory: boolean; password?: string }\n}> = ({ databaseName, schemas, options, children }) => {\n  const [reload, setReload] = useState(new Date().getTime())\n  const [db, setDb] = useState<Database>()\n  const [error, setError] = useState<Error | null>()\n\n  useEffect(() => {\n    const init = async () => {\n      const password = await passwordInput({ title: \"Master Password\", label: \"Password\" })\n      const db = await Database.getDatabase(databaseName, { ...options, password })\n      await db.addSchemas(schemas)\n      return db\n    }\n    init()\n      .then((db) => {\n        setDb(db)\n        setError(null)\n      })\n      .catch((error) => {\n        setError(error)\n      })\n  }, [databaseName, options, schemas, reload])\n\n  const doRender = () => {\n    if (db && !error) {\n      return <DatabaseContext.Provider value={db}>{children}</DatabaseContext.Provider>\n    }\n\n    if (error) {\n      return (\n        <DatabaseError message={error.message} onReset={() => setReload(new Date().getTime())} />\n      )\n    }\n\n    if (!db && !error) {\n      return <LoadingScreen />\n    }\n\n    return <></>\n  }\n\n  return doRender()\n}\n","import { ScrapEntity } from \"../../types\"\n\nexport const toScrapEntity = ({\n  id,\n  created,\n  name,\n  starred,\n  locked,\n  content,\n  contentType,\n  archived,\n  groupName,\n  labels,\n}: any): ScrapEntity => ({\n  id,\n  created,\n  name,\n  starred,\n  locked,\n  content,\n  contentType,\n  archived,\n  groupName,\n  labels,\n})\n","import { useCollection } from \"../hooks\"\nimport { ScrapEntity } from \"../../types\"\nimport { RxDocument } from \"rxdb\"\n\nexport const useScrapOperations = (): {\n  bulkInsert: (scraps: ScrapEntity[]) => Promise<{ success: RxDocument<any, {}>[]; error: any[] }>\n  save: (scrap: ScrapEntity) => Promise<ScrapEntity>\n  deleteOne: (scrap: ScrapEntity) => Promise<void>\n  deleteMany: (scraps: ScrapEntity[]) => Promise<void>\n} => {\n  const collection = useCollection<ScrapEntity | any>(\"scraps\")\n\n  const bulkInsert = async (\n    scraps: ScrapEntity[]\n  ): Promise<{ success: RxDocument<any, {}>[]; error: any[] }> => {\n    await deleteMany(scraps)\n    return await collection.bulkInsert(scraps)\n  }\n\n  const save = async (scrap: ScrapEntity): Promise<ScrapEntity> => {\n    return await collection.upsert(scrap)\n  }\n\n  const deleteOne = async (scrap: ScrapEntity): Promise<void> => {\n    await collection.find({ selector: { id: scrap.id } }).remove()\n  }\n\n  const deleteMany = async (scraps: ScrapEntity[]): Promise<void> => {\n    await collection\n      .find()\n      .where({ id: { $in: scraps.map(({ id }) => id) } })\n      .remove()\n  }\n\n  return {\n    save,\n    bulkInsert,\n    deleteOne,\n    deleteMany,\n  }\n}\n","import React from \"react\"\n\nimport { FontIcon, IColumn, mergeStyleSets } from \"@fluentui/react\"\n\nconst classNames = mergeStyleSets({\n  fileIconHeaderIcon: {\n    padding: 0,\n    fontSize: \"16px\",\n  },\n  fileIconCell: {\n    textAlign: \"center\",\n    selectors: {\n      \"&:before\": {\n        content: \".\",\n        display: \"inline-block\",\n        verticalAlign: \"middle\",\n        height: \"100%\",\n        width: \"0px\",\n        visibility: \"hidden\",\n      },\n    },\n  },\n  fileIconImg: {\n    verticalAlign: \"middle\",\n    maxHeight: \"16px\",\n    maxWidth: \"16px\",\n  },\n  controlWrapper: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  exampleToggle: {\n    display: \"inline-block\",\n    marginBottom: \"10px\",\n    marginRight: \"30px\",\n  },\n  selectionDetails: {\n    marginBottom: \"20px\",\n  },\n})\n\nconst icons: Record<string, string> = {\n  markdown: \"MarkDownLanguage\",\n  json: \"FileCode\",\n  yaml: \"FileYML\",\n}\n\nexport const columns: IColumn[] = [\n  {\n    key: \"icon\",\n    name: \"Scrap Type\",\n    className: classNames.fileIconCell,\n    iconClassName: classNames.fileIconHeaderIcon,\n    iconName: \"Page\",\n    isIconOnly: true,\n    fieldName: \"contentType\",\n    minWidth: 16,\n    maxWidth: 16,\n    onRender: ({ contentType }) => {\n      return <FontIcon iconName={icons[contentType]} className={classNames.fileIconImg} />\n    },\n  },\n  { key: \"name\", name: \"Name\", minWidth: 16, fieldName: \"name\" },\n  {\n    key: \"labels\",\n    name: \"Labels\",\n    minWidth: 100,\n    maxWidth: 100,\n    fieldName: \"labels\",\n    onRender: ({ labels }: { labels: string[] }) => labels.join(\", \"),\n  },\n  {\n    key: \"created\",\n    name: \"Created\",\n    minWidth: 120,\n    maxWidth: 120,\n    fieldName: \"created\",\n    onRender: ({ created }: { created: number }) => (\n      <span>{new Date(created).toLocaleString()}</span>\n    ),\n  },\n]\n","import React, { useMemo } from \"react\"\nimport { DetailsList, Selection, SelectionMode, Stack } from \"@fluentui/react\"\nimport { ScrapEntity } from \"../../../types\"\nimport { columns } from \"./ScrapList.columns\"\n\nexport type IScrapList = {\n  scraps: ScrapEntity[]\n  onOpen: (scrap: ScrapEntity) => void\n  onSelectionChange: (selectedScraps: ScrapEntity[]) => void\n  selectionEnabled: boolean\n}\nexport const ScrapList: React.FC<IScrapList> = ({\n  scraps,\n  onOpen,\n  onSelectionChange,\n  selectionEnabled,\n}) => {\n  const selection = useMemo(() => {\n    return new Selection<ScrapEntity>({\n      getKey: ({ id }) => id,\n      onSelectionChanged: () => {\n        onSelectionChange(selection.getSelection() as ScrapEntity[])\n      },\n    })\n  }, [])\n\n  return (\n    <Stack style={{ overflowY: \"auto\" }}>\n      <DetailsList\n        // @ts-ignore\n        selection={selection}\n        items={scraps}\n        columns={columns}\n        onItemInvoked={onOpen}\n        selectionMode={selectionEnabled ? SelectionMode.multiple : SelectionMode.none}\n        styles={{ root: { userSelect: \"none\" } }}\n      />\n    </Stack>\n  )\n}\n","import React from \"react\"\nimport { ActionBarContainer, ActionBarItem } from \"../../../@ui-kit\"\nimport { SearchBox, Stack } from \"@fluentui/react\"\n\nexport type IActionBar = {\n  onAdd: () => void\n  onRename: () => void\n  onDelete: () => void\n  onToggleSelection: () => void\n  onExport: () => void\n  onImport: () => void\n  onFilter: (filterText: string) => void\n  selectionCount: number\n}\nexport const DesktopActionBar: React.FC<IActionBar> = ({\n  onAdd,\n  onRename,\n  onDelete,\n  onToggleSelection,\n  onExport,\n  onImport,\n  onFilter,\n  selectionCount,\n}) => {\n  return (\n    <ActionBarContainer>\n      <Stack horizontal>\n        <ActionBarItem icon=\"Add\" name=\"New Scrap\" onClick={onAdd} />\n        {selectionCount === 1 && (\n          <ActionBarItem icon=\"Rename\" name=\"Rename Scrap\" onClick={onRename} />\n        )}\n        {selectionCount > 0 && (\n          <ActionBarItem\n            icon=\"Delete\"\n            name={selectionCount > 1 ? \"Delete Scraps\" : \"Delete Scrap\"}\n            onClick={onDelete}\n          />\n        )}\n        <ActionBarItem icon=\"MultiSelect\" name=\"Select\" onClick={onToggleSelection} />\n        <ActionBarItem icon=\"Upload\" name=\"Import\" onClick={onImport} />\n        {selectionCount > 0 && (\n          <ActionBarItem\n            icon=\"Download\"\n            name={selectionCount > 1 ? \"Export All\" : \"Export\"}\n            onClick={onExport}\n          />\n        )}\n      </Stack>\n      <Stack\n        style={{ paddingRight: \"0.5rem\", flex: \"auto\" }}\n        horizontalAlign={\"end\"}\n        verticalAlign={\"center\"}\n      >\n        <SearchBox\n          placeholder=\"Search\"\n          size={30}\n          onSearch={onFilter}\n          onClear={() => onFilter(\"\")}\n        />\n      </Stack>\n    </ActionBarContainer>\n  )\n}\n","import React from \"react\"\nimport { ActionBarContainer, ActionBarItem } from \"../../../@ui-kit\"\nimport { SearchBox, Stack } from \"@fluentui/react\"\nimport { IActionBar } from \"./DesktopActionBar\"\n\nexport const MobileActionBar: React.FC<IActionBar> = ({\n  onAdd,\n  onRename,\n  onDelete,\n  onToggleSelection,\n  onExport,\n  onImport,\n  onFilter,\n  selectionCount,\n}) => {\n  return (\n    <ActionBarContainer horizontal={false}>\n      <Stack style={{ flex: \"auto\" }} horizontalAlign={\"stretch\"} verticalAlign={\"center\"}>\n        <SearchBox\n          underlined={true}\n          placeholder=\"Search\"\n          onSearch={onFilter}\n          onClear={() => onFilter(\"\")}\n        />\n      </Stack>\n      <Stack horizontal={true} horizontalAlign={\"center\"} tokens={{ childrenGap: \"0.5rem\" }}>\n        <ActionBarItem icon=\"Add\" name=\"New\" onClick={onAdd} />\n        {selectionCount === 1 && <ActionBarItem icon=\"Rename\" name=\"Rename\" onClick={onRename} />}\n        {selectionCount > 0 && (\n          <ActionBarItem\n            icon=\"Delete\"\n            name={selectionCount > 1 ? \"Delete All\" : \"Delete\"}\n            onClick={onDelete}\n          />\n        )}\n        <ActionBarItem icon=\"MultiSelect\" name=\"Select\" onClick={onToggleSelection} />\n        <ActionBarItem icon=\"Upload\" name=\"Import\" onClick={onImport} />\n        {selectionCount > 0 && (\n          <ActionBarItem\n            icon=\"Download\"\n            name={selectionCount > 1 ? \"Export All\" : \"Export\"}\n            onClick={onExport}\n          />\n        )}\n      </Stack>\n    </ActionBarContainer>\n  )\n}\n","import React, { useMemo, useState } from \"react\"\nimport { Breadcrumb, Stack } from \"@fluentui/react\"\nimport { useHistory } from \"react-router-dom\"\nimport { useBoolean } from \"@fluentui/react-hooks\"\nimport { useMediaQuery } from \"react-responsive\"\nimport { fdAlert, fdConfirm, fdFileInput, fdInput } from \"../../@ui-kit\"\nimport { useAllScrapsSubscription, useScrapOperations } from \"../../database\"\nimport { getShortId } from \"../../utils/getShortId\"\nimport { ScrapEntity } from \"../../types\"\nimport { ScrapList } from \"./components/ScrapList\"\nimport { DesktopActionBar } from \"./components/DesktopActionBar\"\nimport { MobileActionBar } from \"./components/MobileActionBar\"\nimport download from \"js-file-download\"\nimport { Aigle } from \"aigle\"\nimport { passwordInput } from \"../../@ui-kit/dialogs/PasswordInputDialog\"\nimport { AES, enc } from \"crypto-js\"\n\nconst { eachSeries } = Aigle\n\nexport const ScrapListPage: React.FC = () => {\n  const scraps = useAllScrapsSubscription()\n  const { save, deleteMany, bulkInsert } = useScrapOperations()\n  const { push, location } = useHistory()\n  const [currentSelection, setCurrentSelection] = useState<ScrapEntity[]>([])\n  const [multiSelect, { toggle: toggleMultiSelect }] = useBoolean(false)\n  const [filterBy, setFilterBy] = useState<string>()\n\n  const listedScraps = useMemo(() => {\n    return scraps.filter(({ name, labels }) => {\n      if (!filterBy) return true\n\n      if (name.includes(filterBy)) {\n        return true\n      }\n\n      if (labels.includes(filterBy)) {\n        return true\n      }\n\n      return false\n    })\n  }, [scraps, filterBy])\n\n  const handleFilter = (filterText: string) => {\n    if (filterText && filterText.length > 0) {\n      setFilterBy(filterText)\n    } else {\n      setFilterBy(undefined)\n    }\n  }\n\n  const handleAdd = async () => {\n    const name = await fdInput({\n      title: \"Add Scrap\",\n      label: \"Scrap Name\",\n    })\n    if (name) {\n      await save({\n        id: getShortId(),\n        name,\n        created: new Date().getTime(),\n        content: \"\",\n        locked: false,\n        starred: false,\n        contentType: \"markdown\",\n        labels: [],\n        groupName: \"\",\n        archived: false,\n      })\n    }\n  }\n\n  const handleRename = async () => {\n    const selectedScrap = currentSelection[0]\n    const name = await fdInput({\n      title: \"Rename Scrap\",\n      label: \"Scrap Name\",\n      defaultValue: selectedScrap.name,\n    })\n    if (name) {\n      await save({ ...selectedScrap, name })\n    }\n  }\n\n  const handleDelete = async () => {\n    const text =\n      currentSelection.length > 1\n        ? `Are you sure you want to delete ${currentSelection.length} scraps?`\n        : `Are you sure you want to delete ${currentSelection[0].name}?`\n    const confirm = await fdConfirm({\n      title: \"Delete Scrap\",\n      text,\n    })\n    if (confirm) {\n      await deleteMany(currentSelection)\n    }\n  }\n\n  const handleOpen = async (scrap: ScrapEntity) => {\n    push(`/scrap/${scrap.id}`, location)\n  }\n\n  const handleExport = async () => {\n    const password = await passwordInput({ title: \"Encrypt Export\", label: \"Password\" })\n    const encryptedContent = AES.encrypt(JSON.stringify(currentSelection), password)\n    download(encryptedContent, `scraps.enc`, \"application/json\")\n  }\n\n  const handleImport = async () => {\n    const files = await fdFileInput({})\n    await eachSeries(files, async (file: File) => {\n      const password = await passwordInput({\n        title: `Decrypt Export File ${file.name}`,\n        label: \"Password\",\n      })\n      const decryptedContent = AES.decrypt(await file.text(), password)\n      bulkInsert(JSON.parse(enc.Utf8.stringify(decryptedContent)))\n        .then(({ error }) => {\n          if (error.length > 0) {\n            const errorStr = error.map(({ id, message }) => `${id}: ${message}`).join(\"\\n - \")\n            fdAlert({ title: \"Import\", text: `Errors Occurred:\\n - ${errorStr}` })\n          } else {\n            fdAlert({ title: \"Import\", text: \"Successful Import\" })\n          }\n        })\n        .catch((e) => {\n          fdAlert({ title: \"Import\", text: `Failed Import ${e.message}` })\n        })\n    })\n  }\n\n  const ActionBar = useMediaQuery({ minWidth: 768 }) ? DesktopActionBar : MobileActionBar\n  return (\n    <Stack style={{ flex: \"auto\" }}>\n      <ActionBar\n        onAdd={handleAdd}\n        onRename={handleRename}\n        onDelete={handleDelete}\n        onToggleSelection={toggleMultiSelect}\n        onExport={handleExport}\n        onImport={handleImport}\n        onFilter={handleFilter}\n        selectionCount={currentSelection.length}\n      />\n      <Stack className=\"container overflow-hidden\">\n        <Breadcrumb items={[{ key: \"scraps\", text: \"Scraps\" }]} />\n        <ScrapList\n          scraps={listedScraps}\n          onSelectionChange={setCurrentSelection}\n          onOpen={handleOpen}\n          selectionEnabled={multiSelect}\n        />\n      </Stack>\n    </Stack>\n  )\n}\n","import { useEffect, useState } from \"react\"\nimport { useCollection } from \"../hooks\"\nimport { ScrapEntity } from \"../../types\"\nimport { toScrapEntity } from \"./mappers\"\n\n/**\n * Convenience Hook to return all Scraps from the database\n */\nexport const useAllScrapsSubscription = (): ScrapEntity[] => {\n  const collection = useCollection<ScrapEntity>(\"scraps\")\n  const [results, setResults] = useState<ScrapEntity[]>([])\n\n  useEffect(() => {\n    collection.find({ selector: {}, sort: [{ created: \"asc\" }] }).$.subscribe((results) => {\n      setResults(results.map((it) => toScrapEntity(it)))\n    })\n  }, [collection])\n\n  return results\n}\n","import { v4 as uuidv4 } from \"uuid\"\n\nexport const getShortId = () => {\n  return uuidv4().split(\"-\")[0]\n}\n","import React from \"react\"\nimport { ActionBarContainer, ActionBarItem } from \"../../../@ui-kit\"\n\nexport type IActionBar = {\n  onSave: () => void\n}\nexport const ActionBar: React.FC<IActionBar> = ({ onSave }) => {\n  return (\n    <ActionBarContainer>\n      <ActionBarItem icon=\"Save\" name=\"Save\" onClick={onSave} />\n    </ActionBarContainer>\n  )\n}\n","import React, { useMemo } from \"react\"\nimport ReactMarkdown from \"react-markdown\"\nimport gfm from \"remark-gfm\"\nimport { Stack } from \"@fluentui/react\"\nimport SyntaxHighlighter from \"react-syntax-highlighter\"\nimport { atomOneDark, atomOneLight } from \"react-syntax-highlighter/dist/esm/styles/hljs\"\nimport { useTheme } from \"@fluentui/react-theme-provider\"\nimport { Language } from \"../../../types\"\n\nexport type IMarkdownView = {\n  content: string\n  contentType: Language\n}\nexport const MarkdownView: React.FC<IMarkdownView> = ({ contentType, content }) => {\n  const { isInverted, palette } = useTheme()\n\n  const renderers = useMemo(\n    () => ({\n      code: ({ language, value }: any) => {\n        return (\n          <SyntaxHighlighter\n            style={isInverted ? atomOneDark : atomOneLight}\n            language={language}\n            children={value}\n          />\n        )\n      },\n    }),\n    [isInverted]\n  )\n\n  const renderedContent = useMemo(() => {\n    switch (contentType) {\n      case \"json\":\n        return content\n      default:\n        return content\n    }\n  }, [contentType])\n\n  return (\n    <Stack\n      style={{ flex: \"auto\" }}\n      className=\"markdown-body\"\n      styles={{\n        root: {\n          color: `${palette.black} !important`,\n          padding: \"1rem\",\n        },\n      }}\n    >\n      <ReactMarkdown renderers={renderers} plugins={[gfm]} children={renderedContent} />\n    </Stack>\n  )\n}\n","import React from \"react\"\nimport { Stack, Text } from \"@fluentui/react\"\n\nexport class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    console.log(error, errorInfo)\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <Stack verticalFill horizontalAlign={\"center\"} verticalAlign={\"center\"}>\n          <Text variant={\"xxLarge\"}>😲</Text>\n          <Text variant={\"large\"}>Something went wrong, please ensure the content is valid.</Text>\n        </Stack>\n      )\n    }\n\n    return this.props.children\n  }\n}\n","import React, { useMemo } from \"react\"\nimport {\n  DirectionalHint,\n  IconButton,\n  Label,\n  Separator,\n  Stack,\n  Text,\n  TextField,\n  Toggle,\n  TooltipHost,\n} from \"@fluentui/react\"\nimport YAML from \"yaml\"\nimport { clamp, isObject, map } from \"lodash\"\nimport { capitalCase } from \"change-case\"\nimport { Language } from \"../../../types\"\nimport { ErrorBoundary } from \"./ErrorBoundary\"\nimport { write as copyToClipboard } from \"clipboardy\"\n\nconst getVariant = (depth: number) => {\n  switch (depth) {\n    case 1:\n      return \"xxLarge\"\n    case 2:\n      return \"xLarge\"\n    case 3:\n      return \"large\"\n    default:\n      return \"large\"\n  }\n}\n\nexport type IObjectField = { title: string; object: any; depth: number }\nexport const ObjectField: React.FC<IObjectField> = ({ title, object, depth }) => {\n  const mapValue = (key: string, value: any) => {\n    if (isObject(value)) {\n      return <ObjectField key={key} title={key} object={value} depth={depth + 1} />\n    } else {\n      return <KeyValueField key={key} k={key} v={value} />\n    }\n  }\n\n  return (\n    <Stack style={{ paddingTop: \"0.5rem\" }}>\n      <Text variant={getVariant(depth)}>{capitalCase(title)}</Text>\n      <Separator />\n      <Stack tokens={{ childrenGap: \"0.5rem\" }}>{map(object, (v, k) => mapValue(k, v))}</Stack>\n    </Stack>\n  )\n}\n\nexport type IKeyValueField = {\n  k: string\n  v: string | number | boolean\n}\nconst KeyValueField: React.FC<IKeyValueField> = ({ k, v }) => {\n  let label: string\n  try {\n    label = k && capitalCase(k)\n  } catch (e) {\n    label = \"\"\n  }\n\n  const type = useMemo(() => {\n    if (k.match(/(^pass|pass$)/)) {\n      return \"password\"\n    }\n    return undefined\n  }, [k])\n\n  const onRenderLabel = (): JSX.Element => {\n    return (\n      <Stack horizontal tokens={{ childrenGap: \"0.5rem\" }}>\n        <Label>{label}</Label>\n        <TooltipHost content={\"Copy to Clipboard\"} directionalHint={DirectionalHint.bottomCenter}>\n          <IconButton\n            iconProps={{ iconName: \"Copy\" }}\n            onClick={() => {\n              copyToClipboard(v.toString())\n            }}\n          />\n        </TooltipHost>\n      </Stack>\n    )\n  }\n\n  switch (typeof v) {\n    case \"boolean\":\n      return <Toggle label={label} checked={v} />\n    default:\n      return (\n        <TextField\n          readOnly\n          canRevealPassword\n          type={type}\n          multiline={v.toString().includes(\"\\n\")}\n          rows={clamp(v.toString().split(\"\\n\").length, 0, 10)}\n          value={v.toString()}\n          onRenderLabel={() => onRenderLabel()}\n        />\n      )\n  }\n}\n\nexport type IObjectView = { contentType: Language; content: string }\nexport const ObjectView: React.FC<IObjectView> = ({ contentType, content }) => {\n  const contentObject = useMemo(() => {\n    try {\n      switch (contentType) {\n        case \"json\":\n          return JSON.parse(content)\n        case \"yaml\":\n          return YAML.parse(content)\n      }\n    } catch (e) {\n      console.log(e)\n      return {}\n    }\n  }, [contentType])\n\n  const mapValue = (key: string, value: any) => {\n    if (isObject(value)) {\n      return <ObjectField key={key} title={key} object={value} depth={1} />\n    } else {\n      return <KeyValueField key={key} k={key} v={value} />\n    }\n  }\n\n  return (\n    <Stack tokens={{ childrenGap: \"1rem\", padding: \"1rem\" }}>\n      <ErrorBoundary>{map(contentObject, (v, k) => mapValue(k, v))}</ErrorBoundary>\n    </Stack>\n  )\n}\n","import React, { MutableRefObject, useEffect, useRef, useState } from \"react\"\nimport Editor, { Monaco } from \"@monaco-editor/react\"\nimport { editor, KeyCode, KeyMod } from \"monaco-editor\"\n\nimport { format } from \"prettier/standalone\"\nimport markdown from \"prettier/parser-markdown\"\nimport yaml from \"prettier/parser-yaml\"\nimport babel from \"prettier/parser-babel\"\nimport YAML from \"yaml\"\nimport { useTheme } from \"@fluentui/react-theme-provider\"\n\nexport type IEditorBox = {\n  language: string\n  defaultValue: string\n  onLanguageChange: (newLanguage: string) => void\n  onChanges?: (content: string) => void\n  editorRef?: MutableRefObject<editor.IStandaloneCodeEditor | undefined>\n  monacoRef?: MutableRefObject<Monaco | undefined>\n}\nexport const EditorBox: React.FC<IEditorBox> = ({\n  language,\n  defaultValue,\n  onLanguageChange,\n  onChanges,\n  editorRef,\n  monacoRef,\n}) => {\n  const [trigger, setTrigger] = useState<number>()\n  const _eRef = useRef<editor.IStandaloneCodeEditor>()\n  const _mRef = useRef<Monaco>()\n  const { isInverted } = useTheme()\n\n  useEffect(() => {\n    const action = _eRef.current?.addAction({\n      id: \"app-prettier-format\",\n      label: \"Reformat with Prettier\",\n      contextMenuGroupId: \"1_modification\",\n      contextMenuOrder: 1,\n      keybindings: [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_F],\n      run(editor: editor.ICodeEditor): void | Promise<void> {\n        editor.setValue(\n          format(editor.getValue(), {\n            parser: language,\n            plugins: [markdown, yaml, babel],\n          })\n        )\n      },\n    })\n\n    return () => {\n      action?.dispose()\n    }\n  }, [language, _eRef.current, trigger])\n\n  const handleEditorDidMount = (editor: editor.IStandaloneCodeEditor, monaco: Monaco) => {\n    _eRef.current = editor\n    _mRef.current = monaco\n\n    if (editorRef) {\n      editorRef.current = editor\n    }\n    if (monacoRef) {\n      monacoRef.current = monaco\n    }\n\n    editor.addAction({\n      id: \"app-yaml-2-json\",\n      label: \"Convert: YAML > JSON\",\n      contextMenuGroupId: \"1_modification\",\n      contextMenuOrder: 2,\n      run(e: editor.ICodeEditor): void | Promise<void> {\n        e.setValue(JSON.stringify(YAML.parse(e.getValue()), null, 2))\n        onLanguageChange(\"json\")\n      },\n    })\n\n    editor.addAction({\n      id: \"app-json-2-yaml\",\n      label: \"Convert: JSON > YAML\",\n      contextMenuGroupId: \"1_modification\",\n      contextMenuOrder: 3,\n      run(e: editor.ICodeEditor): void | Promise<void> {\n        e.setValue(YAML.stringify(JSON.parse(e.getValue())))\n        onLanguageChange(\"yaml\")\n      },\n    })\n\n    setTrigger(new Date().getTime())\n  }\n\n  return (\n    <Editor\n      theme={isInverted ? \"vs-dark\" : \"vs-light\"}\n      options={{\n        fontSize: 14,\n        wordWrap: \"off\",\n        fontLigatures: true,\n        multiCursorModifier: \"alt\",\n        lineNumbers: \"off\",\n        minimap: {\n          enabled: false,\n        },\n        scrollBeyondLastLine: false,\n        scrollbar: {\n          verticalScrollbarSize: 6,\n          verticalSliderSize: 6,\n        },\n      }}\n      language={language}\n      onMount={handleEditorDidMount}\n      defaultValue={defaultValue}\n      onChange={(value) => {\n        onChanges && onChanges(value || \"\")\n      }}\n    />\n  )\n}\n","import React from \"react\"\nimport { Dropdown, Stack } from \"@fluentui/react\"\nimport { useTheme } from \"@fluentui/react-theme-provider\"\nimport { EditorBox } from \"../../../components\"\nimport { Language } from \"../../../types\"\n\nconst selectLanguageOptions = [\n  { key: \"markdown\", text: \"Markdown\" },\n  { key: \"json\", text: \"JSON\" },\n  { key: \"yaml\", text: \"YAML\" },\n]\n\nexport type IEditView = {\n  language: Language\n  onLanguageChange: (newLanguage: Language) => void\n  content?: string\n  onContentChange: (newContent: string) => void\n}\nexport const EditView: React.FC<IEditView> = ({\n  language,\n  onLanguageChange,\n  content,\n  onContentChange,\n}) => {\n  const { palette } = useTheme()\n\n  return (\n    <Stack\n      style={{ flex: \"auto\" }}\n      styles={{\n        root: {\n          color: `${palette.black} !important`,\n        },\n      }}\n    >\n      <EditorBox\n        language={language}\n        onLanguageChange={(language: string) => onLanguageChange(language as Language)}\n        defaultValue={content || \"\"}\n        onChanges={onContentChange}\n      />\n      <Stack horizontal className=\"p-2 justify-content-end\">\n        <Dropdown\n          options={selectLanguageOptions}\n          selectedKey={language}\n          onChange={(event, option) =>\n            option?.key && onLanguageChange(option.key.toString() as Language)\n          }\n        />\n      </Stack>\n    </Stack>\n  )\n}\n","import React from \"react\"\nimport { IBasePickerSuggestionsProps, Label, Stack, TagPicker } from \"@fluentui/react\"\n\nconst pickerSuggestionsProps: IBasePickerSuggestionsProps = {\n  suggestionsHeaderText: \"Suggested labels\",\n}\n\nexport type ILabels = {\n  onChange: (labels: string[]) => void\n  labels?: string[]\n  availableLabels?: string[]\n}\nexport const Labels: React.FC<ILabels> = ({ onChange, labels, availableLabels = [] }) => {\n  return (\n    <Stack style={{ padding: \"0.5rem\" }}>\n      <Label>Labels</Label>\n      <TagPicker\n        selectedItems={labels?.map((label) => ({ key: label, name: label }))}\n        pickerSuggestionsProps={pickerSuggestionsProps}\n        onResolveSuggestions={(filter) => {\n          const matchingLabels = availableLabels\n            .filter((label) => label.startsWith(filter))\n            .map((label) => ({\n              key: label,\n              name: label,\n            }))\n\n          return [\n            ...matchingLabels,\n            {\n              key: filter,\n              name: filter,\n            },\n          ]\n        }}\n        onChange={(items) => {\n          onChange(items?.map(({ key }) => key.toString()) || [])\n        }}\n      />\n    </Stack>\n  )\n}\n","import React from \"react\"\nimport { TextField } from \"@fluentui/react\"\n\nexport type ITitle = {\n  value: string\n  onChange: (newTitle: string) => void\n}\nexport const Title: React.FC<ITitle> = ({ value, onChange }) => {\n  return (\n    <TextField\n      underlined\n      onChange={({ target }: any) => onChange(target.value)}\n      value={value}\n      styles={{ field: { fontSize: \"24px\" } }}\n    />\n  )\n}\n","import React, { useEffect, useState } from \"react\"\nimport { useHistory, useParams } from \"react-router-dom\"\nimport { Breadcrumb, Pivot, PivotItem, Stack } from \"@fluentui/react\"\nimport styled from \"styled-components\"\nimport { useScrapOperations, useScrapSubscription } from \"../../database\"\nimport { fdAlert } from \"../../@ui-kit\"\nimport { ActionBar } from \"./components/ActionBar\"\nimport { MarkdownView } from \"./components/MarkdownView\"\nimport { ObjectView } from \"./components/ObjectView\"\nimport { EditView } from \"./components/EditView\"\nimport { Labels } from \"./components/Labels\"\nimport { Title } from \"./components/Title\"\n\nconst ScrapTabs = styled(Pivot)`\n  display: flex;\n  flex-direction: column;\n  flex: auto;\n  overflow: hidden;\n\n  & > div[role=\"tabpanel\"] {\n    display: flex;\n    flex: auto;\n    overflow-y: scroll;\n    overflow-x: hidden;\n  }\n\n  & > div[role=\"tabpanel\"] > .scrap-tab {\n    display: flex;\n    flex: auto;\n    flex-direction: column;\n    padding: 0.5rem;\n    overflow-x: hidden;\n  }\n`\n\nexport const ScrapPage: React.FC = () => {\n  const { push } = useHistory()\n  const { id } = useParams()\n  const [scrap, { error }] = useScrapSubscription({ id })\n  const { save } = useScrapOperations()\n  const [liveTitle, setLiveTitle] = useState(scrap?.name)\n  const [liveContent, setLiveContent] = useState(scrap?.content)\n  const [contentType, setContentType] = useState(scrap?.contentType)\n  const [labels, setLabels] = useState(scrap?.labels || [])\n\n  useEffect(() => {\n    if (scrap) {\n      setLiveTitle(scrap.name)\n      setLiveContent(scrap.content)\n      setContentType(scrap.contentType)\n      setLabels(scrap.labels)\n    }\n  }, [scrap])\n\n  useEffect(() => {\n    if (error) {\n      fdAlert({\n        title: \"Failed to get Scrap\",\n        text: error,\n      }).then(() => push(\"/\"))\n    }\n  }, [scrap, error])\n\n  const handleSave = async () => {\n    if (scrap && liveTitle && contentType) {\n      save({\n        ...scrap,\n        name: liveTitle,\n        content: liveContent || \"\",\n        contentType,\n        labels: labels,\n      }).catch((e) => {\n        fdAlert({ title: \"Failed to Save\", text: e.message })\n      })\n    } else {\n      fdAlert({ title: \"Failed to Save\", text: \"No Content Type Defined\" })\n    }\n  }\n\n  return (\n    <Stack style={{ flex: \"auto\", overflow: \"hidden\" }}>\n      {scrap && contentType && (\n        <>\n          <ActionBar onSave={handleSave} />\n          <Stack style={{ overflow: \"hidden\" }} className=\"container flex-fill\">\n            <Breadcrumb\n              items={[\n                { key: \"scraps\", text: \"Scraps\", onClick: () => push(\"/scraps\") },\n                { key: \"scrap\", text: scrap.name },\n              ]}\n            />\n            <Stack style={{ paddingTop: \"1rem\" }} tokens={{ childrenGap: \"0.5rem\" }}>\n              <Title value={liveTitle || \"\"} onChange={setLiveTitle} />\n              <Labels onChange={setLabels} labels={labels} />\n            </Stack>\n            <ScrapTabs>\n              <PivotItem className=\"scrap-tab\" headerText=\"View\" itemIcon=\"TextDocument\">\n                {(contentType === \"markdown\" && (\n                  <MarkdownView contentType={contentType} content={liveContent || \"\"} />\n                )) || <ObjectView contentType={contentType} content={liveContent || \"\"} />}\n              </PivotItem>\n              <PivotItem className=\"scrap-tab\" headerText=\"Edit\" itemIcon=\"FileCode\">\n                <EditView\n                  language={contentType}\n                  onLanguageChange={setContentType}\n                  content={liveContent}\n                  onContentChange={setLiveContent}\n                />\n              </PivotItem>\n            </ScrapTabs>\n          </Stack>\n        </>\n      )}\n    </Stack>\n  )\n}\n","import { useEffect, useState } from \"react\"\nimport { useCollection } from \"../hooks\"\nimport { ScrapEntity } from \"../../types\"\nimport { toScrapEntity } from \"./mappers\"\n\nexport const useScrapSubscription = ({\n  id,\n}: {\n  id: string\n}): [ScrapEntity | undefined, { error?: string }] => {\n  const collection = useCollection<ScrapEntity>(\"scraps\")\n  const [result, setResult] = useState<ScrapEntity | undefined>()\n  const [error, setError] = useState<string | undefined>()\n\n  useEffect(() => {\n    if (id) {\n      collection.findOne({ selector: { id } }).$.subscribe((result) => {\n        if (result) {\n          setResult(toScrapEntity(result))\n        } else {\n          setError(`Unable to fetch Scrap with id ${id}`)\n          setResult(undefined)\n        }\n      })\n    } else {\n      throw new Error(\"Scrap ID is not defined!!, failed to fetch data\")\n    }\n  }, [collection, id])\n\n  return [result, { error }]\n}\n","export default __webpack_public_path__ + \"static/media/brand-logo.7789894b.png\";","import React from \"react\"\nimport { Stack, Text } from \"@fluentui/react\"\nimport styled from \"styled-components\"\nimport brandLogo from \"../../resources/brand-logo.png\"\n\nconst BrandImage = styled.img`\n  height: 32px;\n  width: 32px;\n  filter: drop-shadow(0px 0px 2px rgba(0, 0, 0, 0.2));\n`\n\nconst BrandStack = styled(Stack)`\n  display: flex;\n  padding: 0.25rem 0.25rem 0.25rem 1rem;\n  align-items: center;\n`\n\nconst BrandName = styled(Text)`\n  font-family: \"Rock Salt\", sans-serif;\n  user-select: none;\n  padding-left: 1rem;\n  font-size: 16px;\n`\n\nexport type INavBrand = {}\nexport const NavBrand: React.FC<INavBrand> = ({}) => {\n  return (\n    <BrandStack horizontal>\n      <BrandImage src={brandLogo} alt={\"brand-logo\"} />\n      <BrandName>Scrappy</BrandName>\n    </BrandStack>\n  )\n}\n","import React, { useMemo } from \"react\"\nimport { INavLink, INavLinkGroup, Nav, Panel, PanelType } from \"@fluentui/react\"\nimport { useHistory } from \"react-router-dom\"\nimport { NavBrand } from \"./components/NavBrand\"\n\ntype IReactRouterNavLinkGroup = Omit<INavLinkGroup, \"links\"> & { links: Omit<INavLink, \"url\">[] }\n\nexport type ISideNav = {\n  isOpen: boolean\n  onDismiss: () => void\n}\nexport const SideNav: React.FC<ISideNav> = ({ isOpen, onDismiss }) => {\n  const { push } = useHistory()\n\n  const navLinkGroups: IReactRouterNavLinkGroup[] = useMemo(\n    () => [\n      {\n        links: [\n          {\n            key: \"scraps\",\n            name: \"Scraps\",\n            icon: \"TextDocument\",\n            onClick: () => push(\"/\"),\n          },\n        ],\n      },\n    ],\n    []\n  )\n\n  return (\n    <Panel\n      onRenderHeader={() => <NavBrand />}\n      isOpen={isOpen}\n      onDismiss={onDismiss}\n      type={PanelType.smallFixedNear}\n      closeButtonAriaLabel=\"Close\"\n      isLightDismiss={true}\n      styles={{\n        commands: { marginTop: \"0.5rem\", marginBottom: \"0.5rem\" },\n        navigation: { justifyContent: \"space-between\", alignItems: \"center\" },\n        content: { padding: 0 },\n      }}\n    >\n      <Nav groups={navLinkGroups as INavLinkGroup[]} selectedKey={\"scraps\"} />\n    </Panel>\n  )\n}\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\nimport { AppThunk, RootState } from \"../../app/store\"\n\ninterface CounterState {\n  value: number\n}\n\nconst initialState: CounterState = {\n  value: 0,\n}\n\nexport const counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1\n    },\n    decrement: (state) => {\n      state.value -= 1\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload\n    },\n  },\n})\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched\nexport const incrementAsync = (amount: number): AppThunk => (dispatch) => {\n  setTimeout(() => {\n    dispatch(incrementByAmount(amount))\n  }, 1000)\n}\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state: RootState) => state.counter.value\n\nexport default counterSlice.reducer\n","import { Action, configureStore, ThunkAction } from \"@reduxjs/toolkit\"\nimport counterReducer from \"../features/counter/counterSlice\"\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n})\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>\n","import React, { useEffect, useState } from \"react\"\nimport { HashRouter, Route, Switch } from \"react-router-dom\"\nimport { ThemeProvider } from \"@fluentui/react-theme-provider\"\nimport styled from \"styled-components\"\nimport { useBoolean } from \"@fluentui/react-hooks\"\nimport { ScrapListPage, ScrapPage } from \"./pages\"\nimport { SideNav } from \"./nav\"\nimport { darkTheme, lightTheme } from \"./theme\"\nimport { IconButton, loadTheme } from \"@fluentui/react\"\nimport { DatabaseProvider, scrapsCollection } from \"./database\"\nimport { RxCollectionCreatorBase } from \"rxdb/dist/types/types\"\nimport { Provider } from \"react-redux\"\nimport { store } from \"./app/store\"\nimport { useMediaQuery } from \"react-responsive\"\n\nconst DATABASE_NAME = \"scrappydb\"\nconst SCHEMAS: Record<string, RxCollectionCreatorBase> = {\n  scraps: scrapsCollection,\n}\n\nconst DATABASE_OPTS = { inMemory: false, password: undefined }\n\nconst AppContainer = styled.div`\n  flex: auto;\n  display: flex;\n  overflow: hidden;\n`\n\nconst Main = styled.main`\n  display: flex;\n  flex: auto;\n  overflow: inherit;\n`\n\nconst App = () => {\n  const [isOpen, { setTrue: openPanel, setFalse: dismissPanel }] = useBoolean(false)\n  const prefersDark = useMediaQuery({ query: \"(prefers-color-scheme: dark)\" })\n  const [theme, setTheme] = useState(prefersDark ? darkTheme : lightTheme)\n\n  useEffect(() => {\n    if (prefersDark) {\n      setTheme(darkTheme)\n      loadTheme(darkTheme)\n    } else {\n      setTheme(lightTheme)\n      loadTheme(lightTheme)\n    }\n  }, [prefersDark])\n\n  return (\n    <ThemeProvider theme={theme} style={{ display: \"flex\", flex: \"auto\" }}>\n      <Provider store={store}>\n        <HashRouter>\n          <AppContainer>\n            <SideNav isOpen={isOpen} onDismiss={dismissPanel} />\n            <Main>\n              <DatabaseProvider\n                databaseName={DATABASE_NAME}\n                schemas={SCHEMAS}\n                options={DATABASE_OPTS}\n              >\n                <Switch>\n                  <Route path=\"/scrap/:id\" component={ScrapPage} />\n                  <Route path=\"/\" component={ScrapListPage} />\n                </Switch>\n              </DatabaseProvider>\n            </Main>\n          </AppContainer>\n        </HashRouter>\n        <IconButton\n          onClick={openPanel}\n          iconProps={{ iconName: \"CollapseMenu\" }}\n          style={{ position: \"fixed\", bottom: \"2rem\", left: \"2rem\" }}\n        />\n      </Provider>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","export const scrapsCollection = {\n  schema: {\n    title: \"Scrappy Scrap Schema\",\n    version: 0,\n    description: \"Scrap of information\",\n    type: \"object\",\n    properties: {\n      id: {\n        type: \"string\",\n        primary: true,\n      },\n      created: {\n        type: \"number\",\n      },\n      groupName: {\n        type: \"string\",\n      },\n      name: {\n        type: \"string\",\n        default: \"Unnamed Scrap...\",\n      },\n      labels: {\n        type: \"array\",\n        uniqueItems: true,\n        items: {\n          type: \"string\",\n        },\n      },\n      contentType: {\n        type: \"string\",\n        default: \"markdown\",\n      },\n      content: {\n        type: \"string\",\n        default: \"New Scrap...\",\n      },\n      starred: {\n        type: \"boolean\",\n        default: false,\n      },\n      locked: {\n        type: \"boolean\",\n        default: false,\n      },\n      archived: {\n        type: \"boolean\",\n        default: false,\n      },\n    },\n    required: [\"id\", \"created\", \"name\"],\n    indexes: [\"id\", \"created\", \"name\"],\n    encrypted: [\"name\", \"content\"],\n    attachments: {\n      encrypted: true,\n    },\n  },\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\")\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import \"./index.scss\"\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(<App />, document.getElementById(\"app-root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}