{"version":3,"sources":["database/hooks/useDatabaseInitializer.ts","database/DatabaseContext.ts","database/hooks/useCollection.ts","database/Database.ts","database/components/DatabaseError.tsx","@ui-kit/layouts/SFlex.tsx","@ui-kit/utilities/LoadingScreen.tsx","@ui-kit/dialogs/AlertDialog.tsx","@ui-kit/dialogs/ConfirmationDialog.tsx","@ui-kit/dialogs/FileInputDialog.tsx","@ui-kit/dialogs/InputDialog.tsx","theme.ts","@ui-kit/inputs/ActionBarItem.tsx","@ui-kit/action-bar/ActionBarContainer.tsx","@ui-kit/utilities/AutoStack.tsx","@ui-kit/theming/AppThemeProvider.tsx","@ui-kit/theming/useThemeController.ts","@ui-kit/notifications/ToastProvider.tsx","@ui-kit/notifications/useMessageBar.ts","@ui-kit/dialogs/PasswordInputDialog.tsx","database/DatabaseProvider.tsx","database/scrap/mappers.ts","database/scrap/useScrapOperations.ts","features/counter/counterSlice.ts","app/store.ts","components/app-bar/AppBar.tsx","resources/brand-logo.png","nav/components/NavBrand.tsx","nav/SideNav.tsx","pages/scrap-list/components/ScrapList.columns.tsx","pages/scrap-list/components/ScrapList.tsx","pages/scrap-list/components/DesktopActionBar.tsx","pages/scrap-list/components/MobileActionBar.tsx","pages/scrap-list/ScrapListPage.tsx","database/scrap/useAllScrapsSubscription.ts","utils/getShortId.ts","pages/scrap/components/ActionBar.tsx","pages/scrap/components/MarkdownView.tsx","pages/scrap/components/ErrorBoundary.jsx","pages/scrap/components/ObjectView.tsx","components/editor-box/EditorBox.tsx","@react-hooks/useSubject.ts","pages/scrap/components/EditView.tsx","pages/scrap/components/Title.tsx","pages/scrap/components/Labels.tsx","pages/scrap/components/ScrapDetails.tsx","pages/scrap/ScrapPage.tsx","database/scrap/useScrapSubscription.ts","@ui-kit/notifications/useToasts.ts","App.tsx","database/scrap/scraps.collection.ts","serviceWorker.ts","index.tsx"],"names":["InitPhase","DatabaseContext","createContext","_database","_collections","collections","addSchemas","Error","useCollection","collection","useContext","addRxPlugin","pouchdbAdapterMemory","pouchdbAdapterIdb","RxDBValidateZSchemaPlugin","RxDBQueryBuilderPlugin","Database","this","schemas","addCollections","databaseName","inMemory","password","createRxDatabase","name","adapter","ignoreDuplicate","database","DatabaseError","message","onReset","palette","useTheme","displayedMessage","useMemo","includes","Stack","horizontal","horizontalAlign","verticalAlign","style","flex","tokens","childrenGap","Icon","iconName","color","red","Text","variant","textAlign","IconButton","iconProps","onClick","styled","div","LoadingScreen","Spinner","label","modalProps","isBlocking","styles","main","maxWidth","AlertDialog","title","text","hidden","onSubmit","onDismiss","dialogContentProps","type","DialogType","normal","closeButtonAriaLabel","subText","Dialog","DialogFooter","PrimaryButton","fdAlert","reactModal","show","ConfirmationDialog","DefaultButton","fdConfirm","FileInputDialog","multiple","accept","useState","isFileDialogOpen","setIsFileDialogOpen","uploads","setUploads","uploadInput","useRef","useEffect","handleFocusBack","debounce","window","addEventListener","removeEventListener","current","click","handleChange","a","target","files","id","ref","display","onChange","fdFileInput","InputDialog","placeholder","defaultValue","input","handleSubmit","value","TextField","componentRef","onKeyPress","key","Key","Enter","fdInput","defaultFontStyle","fontFamily","fontWeight","darkTheme","createTheme","isInverted","themePrimary","themeLighterAlt","themeLighter","themeLight","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","neutralLighterAlt","neutralLighter","neutralLight","neutralQuaternaryAlt","neutralQuaternary","neutralTertiaryAlt","neutralTertiary","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","black","white","lightTheme","initializeIcons","sizing","standard","compact","standardIcon","compactIcon","ActionBarItem","icon","CommandBarButton","minHeight","ActionBarContainer","children","root","borderBottom","AutoStack","AppThemeProvider","userTheme","darkSystem","useMediaQuery","query","theme","setTheme","loadTheme","document","body","backgroundColor","ThemeProvider","themeTransitions","system","dark","light","ToastContext","showToast","content","options","console","log","ToastProvider","setMessage","showMessage","MessageBarType","info","timeout","setTimeout","undefined","dismissMessage","useMessageBar","Provider","position","bottom","width","MessageBar","messageBarType","PasswordInputDialog","requirements","minLength","minLowercase","minUppercase","minNumbers","minSymbols","okDisabled","setOkDisabled","canRevealPassword","onGetErrorMessage","isStrongPassword","length","disabled","passwordInput","DatabaseProvider","lockState","onLock","onUnlock","db","setDb","error","setError","UNLOCKING","getDatabase","init","then","catch","toScrapEntity","created","starred","locked","contentType","archived","groupName","labels","useScrapOperations","bulkInsert","scraps","deleteMany","save","scrap","upsert","deleteOne","find","selector","remove","where","$in","map","counterSlice","createSlice","initialState","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","store","configureStore","reducer","counter","counterReducer","BurgerButton","BarButton","BrandName","themeIcons","AppBar","onBrand","onBurger","unlocked","onToggleLock","onToggleTheme","padding","TooltipHost","capitalCase","BrandImage","img","BrandStack","NavBrand","src","brandLogo","alt","SideNav","isOpen","push","useHistory","navLinkGroups","links","Panel","onRenderHeader","PanelType","smallFixedNear","isLightDismiss","commands","marginTop","marginBottom","navigation","justifyContent","alignItems","Nav","groups","selectedKey","classNames","mergeStyleSets","fileIconHeaderIcon","fontSize","fileIconCell","selectors","height","visibility","fileIconImg","maxHeight","controlWrapper","flexWrap","exampleToggle","marginRight","selectionDetails","icons","markdown","json","yaml","columns","className","iconClassName","isIconOnly","fieldName","minWidth","onRender","FontIcon","join","Date","toLocaleString","ScrapList","onOpen","onSelectionChange","selectionEnabled","selection","Selection","getKey","onSelectionChanged","getSelection","overflowY","DetailsList","items","onItemInvoked","selectionMode","SelectionMode","none","userSelect","DesktopActionBar","onAdd","onRename","onDelete","onToggleSelection","onExport","onImport","onFilter","selectionCount","paddingRight","SearchBox","size","onSearch","onClear","MobileActionBar","underlined","eachSeries","Aigle","ScrapListPage","results","setResults","sort","$","subscribe","it","useAllScrapsSubscription","location","currentSelection","setCurrentSelection","useBoolean","multiSelect","toggleMultiSelect","toggle","filterBy","setFilterBy","listedScraps","filter","handleAdd","uuidv4","split","getTime","handleRename","selectedScrap","handleDelete","handleOpen","handleExport","encryptedContent","AES","encrypt","JSON","stringify","download","handleImport","file","decryptedContent","decrypt","parse","enc","Utf8","errorStr","e","ActionBar","filterText","Breadcrumb","onSave","onDetails","MarkdownView","renderers","code","language","atomOneDark","atomOneLight","renderedContent","plugins","gfm","ErrorBoundary","props","hasError","errorInfo","verticalFill","React","Component","getVariant","depth","ObjectField","object","paddingTop","Separator","v","k","isObject","KeyValueField","match","Toggle","checked","readOnly","multiline","toString","rows","clamp","onRenderLabel","Label","directionalHint","DirectionalHint","bottomCenter","copyToClipboard","ObjectView","contentObject","YAML","EditorBox","onLanguageChange","onChanges","editorRef","monacoRef","trigger","setTrigger","_eRef","_mRef","currentContent","setCurrentContent","subject","Subject","next","useSubject","saveEvents","emitSave","sxn","unsubscribe","saveAction","addAction","contextMenuGroupId","contextMenuOrder","keybindings","KeyMod","CtrlCmd","KeyCode","KEY_S","run","dispose","makePrettierAction","Shift","KEY_F","editor","setValue","format","getValue","parser","babel","wordWrap","fontLigatures","multiCursorModifier","lineNumbers","minimap","enabled","scrollBeyondLastLine","scrollbar","verticalScrollbarSize","verticalSliderSize","onMount","monaco","selectLanguageOptions","EditView","onContentChange","Dropdown","event","option","Title","pickerSuggestionsProps","suggestionsHeaderText","Labels","noLabel","availableLabels","TagPicker","border","selectedItems","onResolveSuggestions","matchingLabels","startsWith","ScrapDetails","onTitleChange","onLabelsChange","headerText","ScrapTabs","Pivot","ScrapPage","detailsIsOpen","toggleDetails","result","setResult","findOne","useScrapSubscription","useParams","liveTitle","setLiveTitle","liveContent","setLiveContent","setContentType","setLabels","handleSave","useCallback","success","useHotkeys","overflow","gridTemplateRows","PivotItem","itemIcon","SCHEMAS","schema","version","description","properties","primary","default","uniqueItems","required","indexes","encrypted","attachments","DATABASE_OPTS","AppContainer","Main","App","LOCKED","phase","setPhase","unlocking","UNLOCKED","useDatabaseInitializer","initPhase","transitionTo","openPanel","setTrue","dismissPanel","setFalse","localStorage","getItem","setItem","nextTheme","useThemeController","phaseTransitions","path","component","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.440ae26c.chunk.js","sourcesContent":["import { useState } from \"react\"\n\nexport enum InitPhase {\n  LOCKED,\n  UNLOCKING,\n  UNLOCKED,\n}\n\nexport type PhaseTransitions = {\n  locked: () => void\n  unlocking: () => void\n  unlocked: () => void\n}\n\nexport const useDatabaseInitializer = (): [InitPhase, PhaseTransitions] => {\n  const [phase, setPhase] = useState(InitPhase.LOCKED)\n\n  const locked = () => {\n    setPhase(InitPhase.LOCKED)\n  }\n\n  const unlocking = () => {\n    setPhase(InitPhase.UNLOCKING)\n  }\n\n  const unlocked = () => {\n    setPhase(InitPhase.UNLOCKED)\n  }\n\n  return [phase, { locked, unlocking, unlocked }]\n}\n","import { createContext } from \"react\"\nimport { Database } from \"./Database\"\n\nexport const DatabaseContext = createContext<Database>({\n  // @ts-ignore\n  _database: null,\n  _collections: {},\n  collections: {},\n  async addSchemas(): Promise<void> {\n    throw new Error(\"Context Not Initialized, ensure a valid Database is passed to the Provider\")\n  },\n})\n","import { useContext } from \"react\"\nimport { DatabaseContext } from \"../DatabaseContext\"\nimport { RxCollection } from \"rxdb\"\n\n/**\n * Use the given collection and return the RxCollection instance so that collection operations\n * can be used\n *\n * @example\n *  const collection: RxCollection<Theatre> = useCollection<Theatre>(\"theatres\")\n *\n * @param collection\n */\nexport const useCollection = <T>(collection: string): RxCollection<T> => {\n  const { collections } = useContext(DatabaseContext)\n  return collections[collection]\n}\n","import { addRxPlugin, createRxDatabase, RxCollection, RxDatabase } from \"rxdb\"\nimport { RxCollectionCreatorBase } from \"rxdb/dist/types/types\"\nimport { RxDBValidateZSchemaPlugin } from \"rxdb/plugins/validate-z-schema\"\nimport { RxDBQueryBuilderPlugin } from \"rxdb/plugins/query-builder\"\nimport pouchdbAdapterMemory from \"pouchdb-adapter-memory\"\nimport pouchdbAdapterIdb from \"pouchdb-adapter-idb\"\n\naddRxPlugin(pouchdbAdapterMemory)\naddRxPlugin(pouchdbAdapterIdb)\naddRxPlugin(RxDBValidateZSchemaPlugin)\naddRxPlugin(RxDBQueryBuilderPlugin)\n\nexport class Database {\n  private _database: RxDatabase\n\n  private _collections: { [p: string]: RxCollection } = {}\n\n  get collections() {\n    return this._collections\n  }\n\n  constructor(_database: RxDatabase) {\n    this._database = _database\n  }\n\n  async addSchemas(schemas: Record<string, RxCollectionCreatorBase>) {\n    this._collections = await this._database.addCollections(schemas)\n  }\n\n  static async getDatabase(\n    databaseName: string,\n    { inMemory = false, password }: { inMemory: boolean; password?: string }\n  ) {\n    const database = await createRxDatabase({\n      name: databaseName,\n      adapter: inMemory ? \"memory\" : \"idb\",\n      ignoreDuplicate: true,\n      password,\n    })\n    return new Database(database)\n  }\n}\n","import React, { useMemo } from \"react\"\nimport { Icon, IconButton, Stack, Text } from \"@fluentui/react\"\nimport { useTheme } from \"@fluentui/react-theme-provider\"\n\nexport const DatabaseError: React.FC<{ message: string; onReset: () => void }> = ({\n  message,\n  onReset,\n}) => {\n  const { palette } = useTheme()\n  const displayedMessage = useMemo(() => {\n    if (message.includes(\"another instance on this adapter has a different password\")) {\n      return \"Invalid Password\"\n    }\n    return message\n  }, [message])\n\n  return (\n    <Stack\n      horizontal\n      horizontalAlign=\"center\"\n      verticalAlign=\"center\"\n      style={{ flex: \"auto\" }}\n      tokens={{ childrenGap: \"0.5rem\" }}\n    >\n      <Icon iconName=\"Warning\" style={{ color: palette.red }} />\n      <Text variant=\"mediumPlus\" style={{ textAlign: \"center\" }}>\n        {displayedMessage}\n      </Text>\n      <IconButton\n        iconProps={{ iconName: \"Refresh\" }}\n        onClick={() => {\n          onReset()\n        }}\n      />\n    </Stack>\n  )\n}\n","import styled from \"styled-components\"\n\nexport const SFlex = styled.div`\n  display: flex;\n  flex: auto;\n  overflow: inherit;\n`\n","import React from \"react\"\nimport { Spinner, Stack } from \"@fluentui/react\"\n\nexport const LoadingScreen: React.FC = () => {\n  return (\n    <Stack style={{ flex: \"auto\" }} horizontalAlign=\"center\" verticalAlign=\"center\">\n      <Spinner label=\"Please wait...\" />\n    </Stack>\n  )\n}\n","import React, { useMemo } from \"react\"\n\nimport { Dialog, DialogFooter, DialogType, PrimaryButton } from \"@fluentui/react\"\nimport reactModal from \"@prezly/react-promise-modal\"\nimport { AwaitableDialogProps } from \"../types\"\n\nconst dialogStyles = { main: { maxWidth: 450 } }\nconst modalProps = {\n  isBlocking: false,\n  styles: dialogStyles,\n}\n\nexport type IAlertDialog = {\n  title: string\n  text: string\n}\nexport const AlertDialog: React.FC<IAlertDialog & AwaitableDialogProps<boolean>> = ({\n  title,\n  text,\n  hidden,\n  onSubmit,\n  onDismiss,\n}) => {\n  const dialogContentProps = useMemo(\n    () => ({\n      type: DialogType.normal,\n      title,\n      closeButtonAriaLabel: \"Close\",\n      subText: text,\n    }),\n    [text, title]\n  )\n\n  return (\n    <>\n      <Dialog\n        hidden={hidden}\n        onDismiss={onDismiss}\n        dialogContentProps={dialogContentProps}\n        modalProps={modalProps}\n      >\n        <DialogFooter>\n          <PrimaryButton onClick={() => onSubmit(true)} text=\"Ok\" />\n        </DialogFooter>\n      </Dialog>\n    </>\n  )\n}\n\nexport const fdAlert = ({ title, text }: IAlertDialog) =>\n  reactModal(({ show, onSubmit, onDismiss }) => (\n    <AlertDialog\n      title={title}\n      text={text}\n      hidden={!show}\n      onSubmit={onSubmit}\n      onDismiss={onDismiss}\n    />\n  )) as Promise<true>\n","import React, { useMemo } from \"react\"\n\nimport { DefaultButton, Dialog, DialogFooter, DialogType, PrimaryButton } from \"@fluentui/react\"\nimport reactModal from \"@prezly/react-promise-modal\"\nimport { AwaitableDialogProps } from \"../types\"\n\nconst dialogStyles = { main: { maxWidth: 450 } }\nconst modalProps = {\n  isBlocking: false,\n  styles: dialogStyles,\n}\n\nexport type IConfirmationDialog = {\n  title: string\n  text: string\n}\nexport const ConfirmationDialog: React.FC<IConfirmationDialog & AwaitableDialogProps<boolean>> = ({\n  title,\n  text,\n  hidden,\n  onSubmit,\n  onDismiss,\n}) => {\n  const dialogContentProps = useMemo(\n    () => ({\n      type: DialogType.normal,\n      title,\n      closeButtonAriaLabel: \"Close\",\n      subText: text,\n    }),\n    [text, title]\n  )\n\n  return (\n    <>\n      <Dialog\n        hidden={hidden}\n        onDismiss={onDismiss}\n        dialogContentProps={dialogContentProps}\n        modalProps={modalProps}\n      >\n        <DialogFooter>\n          <PrimaryButton onClick={() => onSubmit(true)} text=\"Ok\" />\n          <DefaultButton onClick={onDismiss} text=\"Cancel\" />\n        </DialogFooter>\n      </Dialog>\n    </>\n  )\n}\n\nexport const fdConfirm = ({ title, text }: IConfirmationDialog) =>\n  reactModal(({ show, onSubmit, onDismiss }) => (\n    <ConfirmationDialog\n      title={title}\n      text={text}\n      hidden={!show}\n      onSubmit={onSubmit}\n      onDismiss={onDismiss}\n    />\n  )) as Promise<boolean>\n","import React, { ChangeEvent, useEffect, useRef, useState } from \"react\"\nimport reactModal from \"@prezly/react-promise-modal\"\nimport { debounce } from \"lodash\"\nimport { AwaitableDialogProps } from \"../types\"\n\nexport type IFileInputDialog = {\n  multiple?: boolean\n  accept?: string\n}\nexport const FileInputDialog: React.FC<IFileInputDialog & AwaitableDialogProps<FileList>> = ({\n  multiple,\n  accept,\n  onSubmit,\n  onDismiss,\n}) => {\n  const [isFileDialogOpen, setIsFileDialogOpen] = useState<boolean>(true)\n  const [uploads, setUploads] = useState<FileList>()\n  const uploadInput = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    if (!isFileDialogOpen) {\n      ;(uploads && onSubmit(uploads)) || onDismiss()\n    }\n  }, [isFileDialogOpen, uploads])\n\n  useEffect(() => {\n    // Debounce to ensure the event handler body fires after the upload change event\n    const handleFocusBack = debounce(() => {\n      setIsFileDialogOpen(false)\n    }, 2000)\n    window.addEventListener(\"focus\", handleFocusBack)\n    return () => {\n      window.removeEventListener(\"focus\", handleFocusBack)\n    }\n  }, [])\n\n  useEffect(() => {\n    uploadInput.current?.click()\n  }, [])\n\n  const handleChange = async ({ target }: ChangeEvent<HTMLInputElement>) => {\n    target.files && setUploads(target?.files)\n  }\n\n  return (\n    <>\n      <input\n        id=\"file-input-dialog_input\"\n        // @ts-ignore\n        ref={uploadInput}\n        type=\"file\"\n        style={{ display: \"none\" }}\n        multiple={multiple}\n        accept={accept}\n        onChange={handleChange}\n      />\n    </>\n  )\n}\n\nexport const fdFileInput = ({ multiple, accept }: IFileInputDialog) =>\n  reactModal(({ show, onSubmit, onDismiss }) => (\n    <FileInputDialog\n      multiple={multiple}\n      accept={accept}\n      hidden={!show}\n      onSubmit={onSubmit}\n      onDismiss={onDismiss}\n    />\n  )) as Promise<FileList>\n","import React, { useMemo, useRef } from \"react\"\n\nimport {\n  DefaultButton,\n  Dialog,\n  DialogFooter,\n  DialogType,\n  ITextField,\n  PrimaryButton,\n  TextField,\n} from \"@fluentui/react\"\nimport { AwaitableDialogProps } from \"../types\"\nimport reactModal from \"@prezly/react-promise-modal\"\nimport { Key } from \"ts-key-enum\"\n\nconst dialogStyles = { main: { maxWidth: 450 } }\nconst modalProps = {\n  isBlocking: false,\n  styles: dialogStyles,\n}\n\nexport type IInputDialog = {\n  title: string\n  label: string\n  placeholder?: string\n  defaultValue?: string\n}\nexport const InputDialog: React.FC<IInputDialog & AwaitableDialogProps<string>> = ({\n  title,\n  label,\n  placeholder,\n  defaultValue,\n  hidden,\n  onSubmit,\n  onDismiss,\n}) => {\n  const input = useRef<ITextField>()\n  const dialogContentProps = useMemo(\n    () => ({\n      type: DialogType.normal,\n      title,\n      closeButtonAriaLabel: \"Close\",\n    }),\n    [title]\n  )\n\n  const handleSubmit = () => {\n    input.current?.value ? onSubmit(input.current.value) : onSubmit(\"\")\n  }\n\n  return (\n    <>\n      <Dialog\n        hidden={hidden}\n        onDismiss={onDismiss}\n        dialogContentProps={dialogContentProps}\n        modalProps={modalProps}\n      >\n        <TextField\n          // @ts-ignore\n          componentRef={input}\n          label={label}\n          placeholder={placeholder}\n          defaultValue={defaultValue}\n          onKeyPress={({ key }) => key === Key.Enter && handleSubmit()}\n        />\n        <DialogFooter>\n          <PrimaryButton onClick={() => handleSubmit()} text=\"Ok\" />\n          <DefaultButton onClick={onDismiss} text=\"Cancel\" />\n        </DialogFooter>\n      </Dialog>\n    </>\n  )\n}\n\nexport const fdInput = ({ title, label, placeholder, defaultValue }: IInputDialog) =>\n  reactModal(({ show, onSubmit, onDismiss }) => (\n    <InputDialog\n      title={title}\n      label={label}\n      placeholder={placeholder}\n      defaultValue={defaultValue}\n      hidden={!show}\n      onSubmit={onSubmit}\n      onDismiss={onDismiss}\n    />\n  )) as Promise<string>\n","import { createTheme, initializeIcons } from \"@fluentui/react\"\n\nconst defaultFontStyle = {\n  fontFamily:\n    '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"',\n  fontWeight: \"regular\",\n}\n\nexport const darkTheme = createTheme({\n  isInverted: true,\n  defaultFontStyle,\n  palette: {\n    themePrimary: \"#d2d2d2\",\n    themeLighterAlt: \"#d6d6d6\",\n    themeLighter: \"#dbdbdb\",\n    themeLight: \"#e0e0e0\",\n    themeTertiary: \"#e5e5e5\",\n    themeSecondary: \"#eaeaea\",\n    themeDarkAlt: \"#efefef\",\n    themeDark: \"#f4f4f4\",\n    themeDarker: \"#f9f9f9\",\n    neutralLighterAlt: \"#2d2d2d\",\n    neutralLighter: \"#363636\",\n    neutralLight: \"#434343\",\n    neutralQuaternaryAlt: \"#4c4c4c\",\n    neutralQuaternary: \"#535353\",\n    neutralTertiaryAlt: \"#707070\",\n    neutralTertiary: \"#c8c8c8\",\n    neutralSecondary: \"#d0d0d0\",\n    neutralPrimaryAlt: \"#dadada\",\n    neutralPrimary: \"#ffffff\",\n    neutralDark: \"#f4f4f4\",\n    black: \"#f8f8f8\",\n    white: \"#242424\",\n  },\n})\n\nexport const lightTheme = createTheme({\n  isInverted: false,\n  defaultFontStyle,\n  palette: {\n    themePrimary: \"#404040\",\n    themeLighterAlt: \"#f7f7f7\",\n    themeLighter: \"#e0e0e0\",\n    themeLight: \"#c6c6c6\",\n    themeTertiary: \"#8c8c8c\",\n    themeSecondary: \"#575757\",\n    themeDarkAlt: \"#393939\",\n    themeDark: \"#303030\",\n    themeDarker: \"#242424\",\n    neutralLighterAlt: \"#f8f8f8\",\n    neutralLighter: \"#f4f4f4\",\n    neutralLight: \"#eaeaea\",\n    neutralQuaternaryAlt: \"#dadada\",\n    neutralQuaternary: \"#d0d0d0\",\n    neutralTertiaryAlt: \"#c8c8c8\",\n    neutralTertiary: \"#595959\",\n    neutralSecondary: \"#373737\",\n    neutralPrimaryAlt: \"#2f2f2f\",\n    neutralPrimary: \"#000000\",\n    neutralDark: \"#151515\",\n    black: \"#0b0b0b\",\n    white: \"#ffffff\",\n  },\n})\n\ninitializeIcons(\"static/media/\")\n\nexport const sizing = {\n  height: { standard: \"42px\", compact: \"38px\", standardIcon: \"26px\", compactIcon: \"22px\" },\n  width: { standard: \"42px\", compact: \"38px\", standardIcon: \"26px\", compactIcon: \"22px\" },\n}\n","import React from \"react\"\nimport { CommandBarButton } from \"@fluentui/react\"\nimport { sizing } from \"../../theme\"\n\nexport type IActionBarItem = {\n  icon: string\n  name: string\n  onClick: () => void\n}\nexport const ActionBarItem: React.FC<IActionBarItem> = ({ icon, name, onClick }) => {\n  return (\n    <CommandBarButton\n      style={{ minHeight: sizing.height.standard }}\n      iconProps={{ iconName: icon }}\n      text={name}\n      onClick={onClick}\n    />\n  )\n}\n","import React from \"react\"\nimport { Stack } from \"@fluentui/react\"\nimport { useTheme } from \"@fluentui/react-theme-provider\"\n\nexport type IActionBar = {\n  horizontal?: boolean\n}\nexport const ActionBarContainer: React.FC<IActionBar> = ({ children, horizontal = true }) => {\n  const { palette } = useTheme()\n\n  return (\n    <Stack\n      horizontal={horizontal}\n      tokens={{ childrenGap: \"0.5rem\" }}\n      styles={{\n        root: {\n          borderBottom: `${palette.neutralLight} solid 1px`,\n        },\n      }}\n    >\n      {children}\n    </Stack>\n  )\n}\n","import styled from \"styled-components\"\nimport { Stack } from \"@fluentui/react\"\n\nexport const AutoStack = styled(Stack)`\n  flex: auto;\n`\n","import React, { useEffect, useState } from \"react\"\nimport { ThemeProvider } from \"@fluentui/react-theme-provider\"\nimport { darkTheme, lightTheme } from \"../../theme\"\nimport { loadTheme } from \"@fluentui/react\"\nimport { useMediaQuery } from \"react-responsive\"\n\nexport type ITheme = \"light\" | \"dark\" | \"system\"\n\nexport type IAppThemeProvider = {\n  userTheme: ITheme\n}\nexport const AppThemeProvider: React.FC<IAppThemeProvider> = ({ userTheme, children }) => {\n  const darkSystem = useMediaQuery({ query: \"(prefers-color-scheme: dark)\" })\n  const [theme, setTheme] = useState(\n    userTheme === \"dark\" || (userTheme === \"system\" && darkSystem) ? darkTheme : lightTheme\n  )\n\n  useEffect(() => {\n    if (userTheme === \"dark\" || (darkSystem && userTheme === \"system\")) {\n      setTheme(darkTheme)\n      loadTheme(darkTheme)\n      document.body.style.backgroundColor = darkTheme.palette.white\n    } else {\n      setTheme(lightTheme)\n      loadTheme(lightTheme)\n    }\n    document.body.style.backgroundColor = lightTheme.palette.white\n  }, [darkSystem, userTheme])\n\n  return (\n    <ThemeProvider theme={theme} style={{ display: \"flex\", flex: \"auto\" }}>\n      {children}\n    </ThemeProvider>\n  )\n}\n","import { ITheme } from \"./AppThemeProvider\"\nimport { useEffect, useState } from \"react\"\n\nconst themeTransitions: Record<ITheme, ITheme> = {\n  system: \"dark\",\n  dark: \"light\",\n  light: \"system\",\n}\n\nexport type IUseThemeControllerCallbacks = {\n  nextTheme: () => void\n}\n\nexport const useThemeController = (): [ITheme, IUseThemeControllerCallbacks] => {\n  const [theme, setTheme] = useState<ITheme>((localStorage.getItem(\"theme\") as ITheme) || \"system\")\n\n  useEffect(() => {\n    localStorage.setItem(\"theme\", theme)\n  }, [theme])\n\n  const nextTheme = () => {\n    setTheme(themeTransitions[theme])\n  }\n\n  return [theme, { nextTheme }]\n}\n","import React, { createContext } from \"react\"\nimport { MessageBar, MessageBarType, Stack } from \"@fluentui/react\"\nimport { useMessageBar } from \"./useMessageBar\"\n\nexport type ToastOptions = {\n  type?: MessageBarType\n  timeout?: number\n}\nexport type IToastActions = {\n  showToast: (content: string, options: ToastOptions) => void\n}\nexport const ToastContext = createContext<IToastActions>({\n  showToast: (content, options) => {\n    console.log(content, options)\n  },\n})\n\nexport type IToastProvider = {}\nexport const ToastProvider: React.FC<IToastProvider> = ({ children }) => {\n  const [message, { showMessage, dismissMessage }] = useMessageBar()\n\n  const showToast = (content: string, { type, timeout }: ToastOptions) => {\n    showMessage(content, type, timeout)\n  }\n\n  return (\n    <ToastContext.Provider value={{ showToast }}>\n      {children}\n      {message && (\n        <Stack\n          style={{\n            position: \"fixed\",\n            bottom: \"100px\",\n            width: \"100vw\",\n          }}\n          horizontalAlign={\"center\"}\n        >\n          <Stack>\n            <MessageBar onDismiss={dismissMessage} messageBarType={message.type}>\n              {message.content}\n            </MessageBar>\n          </Stack>\n        </Stack>\n      )}\n    </ToastContext.Provider>\n  )\n}\n","import { useState } from \"react\"\nimport { MessageBarType } from \"@fluentui/react\"\n\nexport type IMessage = { content: string; type: MessageBarType }\nexport type IUseMessageBarCallbacks = {\n  showMessage: (content: string, type?: MessageBarType, timeout?: number) => void\n  dismissMessage: () => void\n}\n\nexport const useMessageBar = (): [IMessage | undefined, IUseMessageBarCallbacks] => {\n  const [message, setMessage] = useState<IMessage>()\n\n  const showMessage = (content: string, type = MessageBarType.info, timeout = 3000) => {\n    setMessage({ content, type })\n\n    setTimeout(() => {\n      setMessage(undefined)\n    }, timeout)\n  }\n\n  const dismissMessage = () => {\n    setMessage(undefined)\n  }\n\n  return [message, { showMessage, dismissMessage }]\n}\n","import React, { useMemo, useRef, useState } from \"react\"\nimport isStrongPassword from \"validator/lib/isStrongPassword\"\n\nimport {\n  Dialog,\n  DialogFooter,\n  DialogType,\n  ITextField,\n  PrimaryButton,\n  TextField,\n} from \"@fluentui/react\"\nimport { AwaitableDialogProps } from \"../types\"\nimport reactModal from \"@prezly/react-promise-modal\"\nimport { Key } from \"ts-key-enum\"\n\nconst dialogStyles = { main: { maxWidth: 450 } }\nconst modalProps = {\n  isBlocking: false,\n  styles: dialogStyles,\n}\n\nexport type IPasswordInputDialog = {\n  title: string\n  label: string\n  requirements?: {\n    minLength?: number\n    minLowercase?: number\n    minUppercase?: number\n    minNumbers?: number\n    minSymbols?: number\n  }\n}\nexport const PasswordInputDialog: React.FC<IPasswordInputDialog & AwaitableDialogProps<string>> = ({\n  title,\n  label,\n  requirements = {\n    minLength: 9,\n    minLowercase: 2,\n    minUppercase: 2,\n    minNumbers: 0,\n    minSymbols: 1,\n  },\n  hidden,\n  onSubmit,\n}) => {\n  const [okDisabled, setOkDisabled] = useState(true)\n  const input = useRef<ITextField>()\n  const dialogContentProps = useMemo(\n    () => ({\n      type: DialogType.normal,\n      title,\n      closeButtonAriaLabel: \"Close\",\n    }),\n    [title]\n  )\n\n  const handleSubmit = () => {\n    input.current?.value ? onSubmit(input.current.value) : onSubmit(\"\")\n  }\n\n  const getErrorMessage = (value: string): string | undefined => {\n    const result = isStrongPassword(value, requirements)\n    if (!result) {\n      setOkDisabled(true)\n      if (value.length > 2) return \"Weak Password!\"\n    } else {\n      setOkDisabled(false)\n    }\n  }\n\n  return (\n    <>\n      <Dialog\n        hidden={hidden}\n        onDismiss={undefined}\n        dialogContentProps={dialogContentProps}\n        modalProps={modalProps}\n      >\n        <TextField\n          type=\"password\"\n          canRevealPassword\n          // @ts-ignore\n          componentRef={input}\n          label={label}\n          onKeyPress={({ key }) => key === Key.Enter && !okDisabled && handleSubmit()}\n          onGetErrorMessage={getErrorMessage}\n        />\n        <DialogFooter>\n          <PrimaryButton onClick={() => handleSubmit()} text=\"Ok\" disabled={okDisabled} />\n        </DialogFooter>\n      </Dialog>\n    </>\n  )\n}\n\nexport const passwordInput = ({ title, label }: IPasswordInputDialog) =>\n  reactModal(({ show, onSubmit, onDismiss }) => (\n    <PasswordInputDialog\n      title={title}\n      label={label}\n      hidden={!show}\n      onSubmit={onSubmit}\n      onDismiss={onDismiss}\n    />\n  )) as Promise<string>\n","import React, { useEffect, useState } from \"react\"\nimport { Database } from \"./Database\"\nimport { DatabaseError } from \"./components\"\nimport { DatabaseContext } from \"./DatabaseContext\"\nimport { LoadingScreen } from \"../@ui-kit\"\nimport { RxCollectionCreatorBase } from \"rxdb/dist/types/types\"\nimport { passwordInput } from \"../@ui-kit/dialogs/PasswordInputDialog\"\nimport { InitPhase } from \"./hooks\"\n\nexport const DatabaseProvider: React.FC<{\n  databaseName: string\n  schemas: Record<string, RxCollectionCreatorBase>\n  options: { inMemory: boolean; password?: string }\n  lockState: InitPhase\n  onLock: () => void\n  onUnlock: () => void\n}> = ({ databaseName, schemas, options, children, lockState, onLock, onUnlock }) => {\n  const [db, setDb] = useState<Database>()\n  const [error, setError] = useState<Error | null>()\n\n  useEffect(() => {\n    if (lockState === InitPhase.UNLOCKING) {\n      const init = async () => {\n        const password = await passwordInput({ title: \"Master Password\", label: \"Password\" })\n        const db = await Database.getDatabase(databaseName, { ...options, password })\n        await db.addSchemas(schemas)\n        return db\n      }\n      init()\n        .then((db) => {\n          setDb(db)\n          setError(null)\n          onUnlock()\n        })\n        .catch((error) => {\n          setError(error)\n        })\n    }\n  }, [databaseName, options, schemas, lockState])\n\n  const doRender = () => {\n    if (db && !error) {\n      return <DatabaseContext.Provider value={db}>{children}</DatabaseContext.Provider>\n    }\n\n    if (error) {\n      return <DatabaseError message={error.message} onReset={onLock} />\n    }\n\n    if (!db && !error) {\n      return <LoadingScreen />\n    }\n\n    return <></>\n  }\n\n  return doRender()\n}\n","import { ScrapEntity } from \"../../types\"\n\nexport const toScrapEntity = ({\n  id,\n  created,\n  name,\n  starred,\n  locked,\n  content,\n  contentType,\n  archived,\n  groupName,\n  labels,\n}: any): ScrapEntity => ({\n  id,\n  created,\n  name,\n  starred,\n  locked,\n  content,\n  contentType,\n  archived,\n  groupName,\n  labels,\n})\n","import { useCollection } from \"../hooks\"\nimport { ScrapEntity } from \"../../types\"\nimport { RxDocument } from \"rxdb\"\n\nexport const useScrapOperations = (): {\n  bulkInsert: (scraps: ScrapEntity[]) => Promise<{ success: RxDocument<any, {}>[]; error: any[] }>\n  save: (scrap: ScrapEntity) => Promise<ScrapEntity>\n  deleteOne: (scrap: ScrapEntity) => Promise<void>\n  deleteMany: (scraps: ScrapEntity[]) => Promise<void>\n} => {\n  const collection = useCollection<ScrapEntity | any>(\"scraps\")\n\n  const bulkInsert = async (\n    scraps: ScrapEntity[]\n  ): Promise<{ success: RxDocument<any, {}>[]; error: any[] }> => {\n    await deleteMany(scraps)\n    return await collection.bulkInsert(scraps)\n  }\n\n  const save = async (scrap: ScrapEntity): Promise<ScrapEntity> => {\n    return await collection.upsert(scrap)\n  }\n\n  const deleteOne = async (scrap: ScrapEntity): Promise<void> => {\n    await collection.find({ selector: { id: scrap.id } }).remove()\n  }\n\n  const deleteMany = async (scraps: ScrapEntity[]): Promise<void> => {\n    await collection\n      .find()\n      .where({ id: { $in: scraps.map(({ id }) => id) } })\n      .remove()\n  }\n\n  return {\n    save,\n    bulkInsert,\n    deleteOne,\n    deleteMany,\n  }\n}\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\"\nimport { AppThunk, RootState } from \"../../app/store\"\n\ninterface CounterState {\n  value: number\n}\n\nconst initialState: CounterState = {\n  value: 0,\n}\n\nexport const counterSlice = createSlice({\n  name: \"counter\",\n  initialState,\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1\n    },\n    decrement: (state) => {\n      state.value -= 1\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload\n    },\n  },\n})\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched\nexport const incrementAsync = (amount: number): AppThunk => (dispatch) => {\n  setTimeout(() => {\n    dispatch(incrementByAmount(amount))\n  }, 1000)\n}\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state: RootState) => state.counter.value\n\nexport default counterSlice.reducer\n","import { Action, configureStore, ThunkAction } from \"@reduxjs/toolkit\"\nimport counterReducer from \"../features/counter/counterSlice\"\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n})\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>\n","import React from \"react\"\nimport { IconButton, Stack, Text, TooltipHost } from \"@fluentui/react\"\nimport styled from \"styled-components\"\nimport { lightTheme } from \"../../theme\"\nimport { ITheme } from \"../../@ui-kit\"\nimport { capitalCase } from \"change-case\"\n\nconst { palette } = lightTheme\n\nconst BurgerButton = styled(IconButton)`\n  height: 48px;\n  width: 48px;\n  color: ${palette.white};\n\n  i {\n    color: ${palette.white};\n  }\n\n  &:hover {\n    border-radius: 0;\n    background-color: ${palette.neutralPrimaryAlt};\n    color: ${palette.neutralPrimary};\n  }\n`\n\nconst BarButton = styled(IconButton)`\n  color: ${palette.white};\n\n  i {\n    color: ${palette.white};\n  }\n\n  &:hover {\n    background-color: ${palette.neutralPrimaryAlt};\n    color: ${palette.neutralPrimary};\n  }\n`\n\nconst BrandName = styled(Text)`\n  font-family: \"Rock Salt\", sans-serif;\n  user-select: none;\n  padding-left: 1rem;\n  font-size: 16px;\n  color: ${palette.white};\n  cursor: pointer;\n`\n\nconst themeIcons: Record<ITheme, string> = {\n  dark: \"CircleRing\",\n  light: \"CircleFill\",\n  system: \"CircleHalfFull\",\n}\n\nexport type IAppBar = {\n  theme: ITheme\n  onToggleTheme: () => void\n  onBurger: () => void\n  unlocked: boolean\n  onToggleLock: () => void\n  onBrand?: () => void\n}\nexport const AppBar: React.FC<IAppBar> = ({\n  onBrand,\n  onBurger,\n  unlocked,\n  onToggleLock,\n  theme,\n  onToggleTheme,\n}) => {\n  return (\n    <Stack\n      horizontal\n      verticalAlign=\"center\"\n      style={{\n        backgroundColor: palette.neutralPrimary,\n      }}\n    >\n      <BurgerButton\n        onClick={onBurger}\n        iconProps={{\n          iconName: \"WaffleOffice365\",\n        }}\n      />\n      <BrandName onClick={onBrand}>Scrappy</BrandName>\n      <Stack\n        horizontal\n        style={{ flex: \"auto\", padding: \"0 0.5rem 0 0.5rem\" }}\n        horizontalAlign=\"end\"\n        verticalAlign=\"center\"\n      >\n        <TooltipHost content={unlocked ? \"Lock Database\" : \"Unlock Database\"}>\n          <BarButton\n            onClick={onToggleLock}\n            iconProps={{ iconName: unlocked ? \"UnLock\" : \"Lock\" }}\n          />\n        </TooltipHost>\n        <TooltipHost content={`${capitalCase(theme)} Theme`}>\n          <BarButton onClick={onToggleTheme} iconProps={{ iconName: themeIcons[theme] }} />\n        </TooltipHost>\n      </Stack>\n    </Stack>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/brand-logo.7789894b.png\";","import React from \"react\"\nimport { Stack, Text } from \"@fluentui/react\"\nimport styled from \"styled-components\"\nimport brandLogo from \"../../resources/brand-logo.png\"\n\nconst BrandImage = styled.img`\n  height: 32px;\n  width: 32px;\n  filter: drop-shadow(0px 0px 2px rgba(0, 0, 0, 0.2));\n`\n\nconst BrandStack = styled(Stack)`\n  display: flex;\n  padding: 0.25rem 0.25rem 0.25rem 1rem;\n  align-items: center;\n`\n\nconst BrandName = styled(Text)`\n  font-family: \"Rock Salt\", sans-serif;\n  user-select: none;\n  padding-left: 1rem;\n  font-size: 16px;\n`\n\nexport type INavBrand = {}\nexport const NavBrand: React.FC<INavBrand> = ({}) => {\n  return (\n    <BrandStack horizontal>\n      <BrandImage src={brandLogo} alt={\"brand-logo\"} />\n      <BrandName>Scrappy</BrandName>\n    </BrandStack>\n  )\n}\n","import React, { useMemo } from \"react\"\nimport { INavLink, INavLinkGroup, Nav, Panel, PanelType } from \"@fluentui/react\"\nimport { useHistory } from \"react-router-dom\"\nimport { NavBrand } from \"./components/NavBrand\"\n\ntype IReactRouterNavLinkGroup = Omit<INavLinkGroup, \"links\"> & { links: Omit<INavLink, \"url\">[] }\n\nexport type ISideNav = {\n  isOpen: boolean\n  onDismiss: () => void\n}\nexport const SideNav: React.FC<ISideNav> = ({ isOpen, onDismiss }) => {\n  const { push } = useHistory()\n\n  const navLinkGroups: IReactRouterNavLinkGroup[] = useMemo(\n    () => [\n      {\n        links: [\n          {\n            key: \"scraps\",\n            name: \"Scraps\",\n            icon: \"TextDocument\",\n            onClick: () => push(\"/\"),\n          },\n        ],\n      },\n    ],\n    []\n  )\n\n  return (\n    <Panel\n      onRenderHeader={() => <NavBrand />}\n      isOpen={isOpen}\n      onDismiss={onDismiss}\n      type={PanelType.smallFixedNear}\n      closeButtonAriaLabel=\"Close\"\n      isLightDismiss={true}\n      styles={{\n        commands: { marginTop: \"0.5rem\", marginBottom: \"0.5rem\" },\n        navigation: { justifyContent: \"space-between\", alignItems: \"center\" },\n        content: { padding: 0 },\n      }}\n    >\n      <Nav groups={navLinkGroups as INavLinkGroup[]} selectedKey={\"scraps\"} />\n    </Panel>\n  )\n}\n","import React from \"react\"\n\nimport { FontIcon, IColumn, mergeStyleSets } from \"@fluentui/react\"\n\nconst classNames = mergeStyleSets({\n  fileIconHeaderIcon: {\n    padding: 0,\n    fontSize: \"16px\",\n  },\n  fileIconCell: {\n    textAlign: \"center\",\n    selectors: {\n      \"&:before\": {\n        content: \".\",\n        display: \"inline-block\",\n        verticalAlign: \"middle\",\n        height: \"100%\",\n        width: \"0px\",\n        visibility: \"hidden\",\n      },\n    },\n  },\n  fileIconImg: {\n    verticalAlign: \"middle\",\n    maxHeight: \"16px\",\n    maxWidth: \"16px\",\n  },\n  controlWrapper: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  exampleToggle: {\n    display: \"inline-block\",\n    marginBottom: \"10px\",\n    marginRight: \"30px\",\n  },\n  selectionDetails: {\n    marginBottom: \"20px\",\n  },\n})\n\nconst icons: Record<string, string> = {\n  markdown: \"MarkDownLanguage\",\n  json: \"FileCode\",\n  yaml: \"FileYML\",\n}\n\nexport const columns: IColumn[] = [\n  {\n    key: \"icon\",\n    name: \"Scrap Type\",\n    className: classNames.fileIconCell,\n    iconClassName: classNames.fileIconHeaderIcon,\n    iconName: \"Page\",\n    isIconOnly: true,\n    fieldName: \"contentType\",\n    minWidth: 16,\n    maxWidth: 16,\n    onRender: ({ contentType }) => {\n      return <FontIcon iconName={icons[contentType]} className={classNames.fileIconImg} />\n    },\n  },\n  { key: \"name\", name: \"Name\", minWidth: 16, fieldName: \"name\" },\n  {\n    key: \"labels\",\n    name: \"Labels\",\n    minWidth: 100,\n    maxWidth: 100,\n    fieldName: \"labels\",\n    onRender: ({ labels }: { labels: string[] }) => labels.join(\", \"),\n  },\n  {\n    key: \"created\",\n    name: \"Created\",\n    minWidth: 120,\n    maxWidth: 120,\n    fieldName: \"created\",\n    onRender: ({ created }: { created: number }) => (\n      <span>{new Date(created).toLocaleString()}</span>\n    ),\n  },\n]\n","import React, { useMemo } from \"react\"\nimport { DetailsList, Selection, SelectionMode, Stack } from \"@fluentui/react\"\nimport { ScrapEntity } from \"../../../types\"\nimport { columns } from \"./ScrapList.columns\"\n\nexport type IScrapList = {\n  scraps: ScrapEntity[]\n  onOpen: (scrap: ScrapEntity) => void\n  onSelectionChange: (selectedScraps: ScrapEntity[]) => void\n  selectionEnabled: boolean\n}\nexport const ScrapList: React.FC<IScrapList> = ({\n  scraps,\n  onOpen,\n  onSelectionChange,\n  selectionEnabled,\n}) => {\n  const selection = useMemo(() => {\n    return new Selection<ScrapEntity>({\n      getKey: ({ id }) => id,\n      onSelectionChanged: () => {\n        onSelectionChange(selection.getSelection() as ScrapEntity[])\n      },\n    })\n  }, [])\n\n  return (\n    <Stack style={{ overflowY: \"auto\" }}>\n      <DetailsList\n        // @ts-ignore\n        selection={selection}\n        items={scraps}\n        columns={columns}\n        onItemInvoked={onOpen}\n        selectionMode={selectionEnabled ? SelectionMode.multiple : SelectionMode.none}\n        styles={{ root: { userSelect: \"none\" } }}\n      />\n    </Stack>\n  )\n}\n","import React from \"react\"\nimport { ActionBarContainer, ActionBarItem } from \"../../../@ui-kit\"\nimport { SearchBox, Stack } from \"@fluentui/react\"\n\nexport type IActionBar = {\n  onAdd: () => void\n  onRename: () => void\n  onDelete: () => void\n  onToggleSelection: () => void\n  onExport: () => void\n  onImport: () => void\n  onFilter: (filterText: string) => void\n  selectionCount: number\n}\nexport const DesktopActionBar: React.FC<IActionBar> = ({\n  onAdd,\n  onRename,\n  onDelete,\n  onToggleSelection,\n  onExport,\n  onImport,\n  onFilter,\n  selectionCount,\n}) => {\n  return (\n    <ActionBarContainer>\n      <Stack horizontal>\n        <ActionBarItem icon=\"Add\" name=\"New Scrap\" onClick={onAdd} />\n        {selectionCount === 1 && (\n          <ActionBarItem icon=\"Rename\" name=\"Rename Scrap\" onClick={onRename} />\n        )}\n        {selectionCount > 0 && (\n          <ActionBarItem\n            icon=\"Delete\"\n            name={selectionCount > 1 ? \"Delete Scraps\" : \"Delete Scrap\"}\n            onClick={onDelete}\n          />\n        )}\n        <ActionBarItem icon=\"MultiSelect\" name=\"Select\" onClick={onToggleSelection} />\n        <ActionBarItem icon=\"Upload\" name=\"Import\" onClick={onImport} />\n        {selectionCount > 0 && (\n          <ActionBarItem\n            icon=\"Download\"\n            name={selectionCount > 1 ? \"Export All\" : \"Export\"}\n            onClick={onExport}\n          />\n        )}\n      </Stack>\n      <Stack\n        style={{ paddingRight: \"0.5rem\", flex: \"auto\" }}\n        horizontalAlign={\"end\"}\n        verticalAlign={\"center\"}\n      >\n        <SearchBox\n          placeholder=\"Search\"\n          size={30}\n          onSearch={onFilter}\n          onClear={() => onFilter(\"\")}\n        />\n      </Stack>\n    </ActionBarContainer>\n  )\n}\n","import React from \"react\"\nimport { ActionBarContainer, ActionBarItem } from \"../../../@ui-kit\"\nimport { SearchBox, Stack } from \"@fluentui/react\"\nimport { IActionBar } from \"./DesktopActionBar\"\n\nexport const MobileActionBar: React.FC<IActionBar> = ({\n  onAdd,\n  onRename,\n  onDelete,\n  onToggleSelection,\n  onExport,\n  onImport,\n  onFilter,\n  selectionCount,\n}) => {\n  return (\n    <ActionBarContainer horizontal={false}>\n      <Stack style={{ flex: \"auto\" }} horizontalAlign={\"stretch\"} verticalAlign={\"center\"}>\n        <SearchBox\n          underlined={true}\n          placeholder=\"Search\"\n          onSearch={onFilter}\n          onClear={() => onFilter(\"\")}\n        />\n      </Stack>\n      <Stack horizontal={true} horizontalAlign={\"center\"} tokens={{ childrenGap: \"0.5rem\" }}>\n        <ActionBarItem icon=\"Add\" name=\"New\" onClick={onAdd} />\n        {selectionCount === 1 && <ActionBarItem icon=\"Rename\" name=\"Rename\" onClick={onRename} />}\n        {selectionCount > 0 && (\n          <ActionBarItem\n            icon=\"Delete\"\n            name={selectionCount > 1 ? \"Delete All\" : \"Delete\"}\n            onClick={onDelete}\n          />\n        )}\n        <ActionBarItem icon=\"MultiSelect\" name=\"Select\" onClick={onToggleSelection} />\n        <ActionBarItem icon=\"Upload\" name=\"Import\" onClick={onImport} />\n        {selectionCount > 0 && (\n          <ActionBarItem\n            icon=\"Download\"\n            name={selectionCount > 1 ? \"Export All\" : \"Export\"}\n            onClick={onExport}\n          />\n        )}\n      </Stack>\n    </ActionBarContainer>\n  )\n}\n","import React, { useMemo, useState } from \"react\"\nimport { Breadcrumb, Stack } from \"@fluentui/react\"\nimport { useHistory } from \"react-router-dom\"\nimport { useBoolean } from \"@fluentui/react-hooks\"\nimport { useMediaQuery } from \"react-responsive\"\nimport { fdAlert, fdConfirm, fdFileInput, fdInput } from \"../../@ui-kit\"\nimport { useAllScrapsSubscription, useScrapOperations } from \"../../database\"\nimport { getShortId } from \"../../utils/getShortId\"\nimport { ScrapEntity } from \"../../types\"\nimport { ScrapList } from \"./components/ScrapList\"\nimport { DesktopActionBar } from \"./components/DesktopActionBar\"\nimport { MobileActionBar } from \"./components/MobileActionBar\"\nimport download from \"js-file-download\"\nimport { Aigle } from \"aigle\"\nimport { passwordInput } from \"../../@ui-kit/dialogs/PasswordInputDialog\"\nimport { AES, enc } from \"crypto-js\"\n\nconst { eachSeries } = Aigle\n\nexport const ScrapListPage: React.FC = () => {\n  const scraps = useAllScrapsSubscription()\n  const { save, deleteMany, bulkInsert } = useScrapOperations()\n  const { push, location } = useHistory()\n  const [currentSelection, setCurrentSelection] = useState<ScrapEntity[]>([])\n  const [multiSelect, { toggle: toggleMultiSelect }] = useBoolean(false)\n  const [filterBy, setFilterBy] = useState<string>()\n\n  const listedScraps = useMemo(() => {\n    return scraps.filter(({ name, labels }) => {\n      if (!filterBy) return true\n\n      if (name.includes(filterBy)) {\n        return true\n      }\n\n      if (labels.includes(filterBy)) {\n        return true\n      }\n\n      return false\n    })\n  }, [scraps, filterBy])\n\n  const handleFilter = (filterText: string) => {\n    if (filterText && filterText.length > 0) {\n      setFilterBy(filterText)\n    } else {\n      setFilterBy(undefined)\n    }\n  }\n\n  const handleAdd = async () => {\n    const name = await fdInput({\n      title: \"Add Scrap\",\n      label: \"Scrap Name\",\n    })\n    if (name) {\n      await save({\n        id: getShortId(),\n        name,\n        created: new Date().getTime(),\n        content: \"\",\n        locked: false,\n        starred: false,\n        contentType: \"markdown\",\n        labels: [],\n        groupName: \"\",\n        archived: false,\n      })\n    }\n  }\n\n  const handleRename = async () => {\n    const selectedScrap = currentSelection[0]\n    const name = await fdInput({\n      title: \"Rename Scrap\",\n      label: \"Scrap Name\",\n      defaultValue: selectedScrap.name,\n    })\n    if (name) {\n      await save({ ...selectedScrap, name })\n    }\n  }\n\n  const handleDelete = async () => {\n    const text =\n      currentSelection.length > 1\n        ? `Are you sure you want to delete ${currentSelection.length} scraps?`\n        : `Are you sure you want to delete ${currentSelection[0].name}?`\n    const confirm = await fdConfirm({\n      title: \"Delete Scrap\",\n      text,\n    })\n    if (confirm) {\n      await deleteMany(currentSelection)\n    }\n  }\n\n  const handleOpen = async (scrap: ScrapEntity) => {\n    push(`/scrap/${scrap.id}`, location)\n  }\n\n  const handleExport = async () => {\n    const password = await passwordInput({ title: \"Encrypt Export\", label: \"Password\" })\n    const encryptedContent = AES.encrypt(JSON.stringify(currentSelection), password)\n    download(encryptedContent, `scraps.enc`, \"application/json\")\n  }\n\n  const handleImport = async () => {\n    const files = await fdFileInput({})\n    await eachSeries(files, async (file: File) => {\n      const password = await passwordInput({\n        title: `Decrypt Export File ${file.name}`,\n        label: \"Password\",\n      })\n      const decryptedContent = AES.decrypt(await file.text(), password)\n      bulkInsert(JSON.parse(enc.Utf8.stringify(decryptedContent)))\n        .then(({ error }) => {\n          if (error.length > 0) {\n            const errorStr = error.map(({ id, message }) => `${id}: ${message}`).join(\"\\n - \")\n            fdAlert({ title: \"Import\", text: `Errors Occurred:\\n - ${errorStr}` })\n          } else {\n            fdAlert({ title: \"Import\", text: \"Successful Import\" })\n          }\n        })\n        .catch((e) => {\n          fdAlert({ title: \"Import\", text: `Failed Import ${e.message}` })\n        })\n    })\n  }\n\n  const ActionBar = useMediaQuery({ minWidth: 768 }) ? DesktopActionBar : MobileActionBar\n  return (\n    <Stack style={{ flex: \"auto\" }}>\n      <ActionBar\n        onAdd={handleAdd}\n        onRename={handleRename}\n        onDelete={handleDelete}\n        onToggleSelection={toggleMultiSelect}\n        onExport={handleExport}\n        onImport={handleImport}\n        onFilter={handleFilter}\n        selectionCount={currentSelection.length}\n      />\n      <Stack className=\"container overflow-hidden\">\n        <Breadcrumb items={[{ key: \"scraps\", text: \"Scraps\" }]} />\n        <ScrapList\n          scraps={listedScraps}\n          onSelectionChange={setCurrentSelection}\n          onOpen={handleOpen}\n          selectionEnabled={multiSelect}\n        />\n      </Stack>\n    </Stack>\n  )\n}\n","import { useEffect, useState } from \"react\"\nimport { useCollection } from \"../hooks\"\nimport { ScrapEntity } from \"../../types\"\nimport { toScrapEntity } from \"./mappers\"\n\n/**\n * Convenience Hook to return all Scraps from the database\n */\nexport const useAllScrapsSubscription = (): ScrapEntity[] => {\n  const collection = useCollection<ScrapEntity>(\"scraps\")\n  const [results, setResults] = useState<ScrapEntity[]>([])\n\n  useEffect(() => {\n    collection.find({ selector: {}, sort: [{ created: \"asc\" }] }).$.subscribe((results) => {\n      setResults(results.map((it) => toScrapEntity(it)))\n    })\n  }, [collection])\n\n  return results\n}\n","import { v4 as uuidv4 } from \"uuid\"\n\nexport const getShortId = () => {\n  return uuidv4().split(\"-\")[0]\n}\n","import React from \"react\"\nimport { ActionBarContainer, ActionBarItem } from \"../../../@ui-kit\"\n\nexport type IActionBar = {\n  onSave: () => void\n  onDetails: () => void\n}\nexport const ActionBar: React.FC<IActionBar> = ({ onSave, onDetails }) => {\n  return (\n    <ActionBarContainer>\n      <ActionBarItem icon=\"Save\" name=\"Save\" onClick={onSave} />\n      <ActionBarItem icon=\"Info\" name=\"Details\" onClick={onDetails} />\n    </ActionBarContainer>\n  )\n}\n","import React, { useMemo } from \"react\"\nimport ReactMarkdown from \"react-markdown\"\nimport gfm from \"remark-gfm\"\nimport { Stack } from \"@fluentui/react\"\nimport SyntaxHighlighter from \"react-syntax-highlighter\"\nimport { atomOneDark, atomOneLight } from \"react-syntax-highlighter/dist/esm/styles/hljs\"\nimport { useTheme } from \"@fluentui/react-theme-provider\"\nimport { Language } from \"../../../types\"\n\nexport type IMarkdownView = {\n  content: string\n  contentType: Language\n}\nexport const MarkdownView: React.FC<IMarkdownView> = ({ contentType, content }) => {\n  const { isInverted, palette } = useTheme()\n\n  const renderers = useMemo(\n    () => ({\n      code: ({ language, value }: any) => {\n        return (\n          <SyntaxHighlighter\n            style={isInverted ? atomOneDark : atomOneLight}\n            language={language}\n            children={value}\n          />\n        )\n      },\n    }),\n    [isInverted]\n  )\n\n  const renderedContent = useMemo(() => {\n    switch (contentType) {\n      case \"json\":\n        return content\n      default:\n        return content\n    }\n  }, [contentType])\n\n  return (\n    <Stack\n      style={{ flex: \"auto\" }}\n      className=\"markdown-body\"\n      styles={{\n        root: {\n          color: `${palette.black} !important`,\n          padding: \"1rem\",\n        },\n      }}\n    >\n      <ReactMarkdown renderers={renderers} plugins={[gfm]} children={renderedContent} />\n    </Stack>\n  )\n}\n","import React from \"react\"\nimport { Stack, Text } from \"@fluentui/react\"\n\nexport class ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    console.log(error, errorInfo)\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <Stack verticalFill horizontalAlign={\"center\"} verticalAlign={\"center\"}>\n          <Text variant={\"xxLarge\"}>😲</Text>\n          <Text variant={\"large\"}>Something went wrong, please ensure the content is valid.</Text>\n        </Stack>\n      )\n    }\n\n    return this.props.children\n  }\n}\n","import React, { useMemo } from \"react\"\nimport {\n  DirectionalHint,\n  IconButton,\n  Label,\n  Separator,\n  Stack,\n  Text,\n  TextField,\n  Toggle,\n  TooltipHost,\n} from \"@fluentui/react\"\nimport YAML from \"yaml\"\nimport { clamp, isObject, map } from \"lodash\"\nimport { capitalCase } from \"change-case\"\nimport { Language } from \"../../../types\"\nimport { ErrorBoundary } from \"./ErrorBoundary\"\nimport { write as copyToClipboard } from \"clipboardy\"\n\nconst getVariant = (depth: number) => {\n  switch (depth) {\n    case 1:\n      return \"xxLarge\"\n    case 2:\n      return \"xLarge\"\n    case 3:\n      return \"large\"\n    default:\n      return \"large\"\n  }\n}\n\nexport type IObjectField = { title: string; object: any; depth: number }\nexport const ObjectField: React.FC<IObjectField> = ({ title, object, depth }) => {\n  const mapValue = (key: string, value: any) => {\n    if (isObject(value)) {\n      return <ObjectField key={key} title={key} object={value} depth={depth + 1} />\n    } else {\n      return <KeyValueField key={key} k={key} v={value} />\n    }\n  }\n\n  return (\n    <Stack style={{ paddingTop: \"0.5rem\" }}>\n      <Text variant={getVariant(depth)}>{capitalCase(title)}</Text>\n      <Separator />\n      <Stack tokens={{ childrenGap: \"0.5rem\" }}>{map(object, (v, k) => mapValue(k, v))}</Stack>\n    </Stack>\n  )\n}\n\nexport type IKeyValueField = {\n  k: string\n  v: string | number | boolean\n}\nconst KeyValueField: React.FC<IKeyValueField> = ({ k, v }) => {\n  let label: string\n  try {\n    label = k && capitalCase(k)\n  } catch (e) {\n    label = \"\"\n  }\n\n  const type = useMemo(() => {\n    if (k.match(/(^pass|pass$)/)) {\n      return \"password\"\n    }\n    return undefined\n  }, [k])\n\n  const onRenderLabel = (): JSX.Element => {\n    return (\n      <Stack horizontal tokens={{ childrenGap: \"0.5rem\" }}>\n        <Label>{label}</Label>\n        <TooltipHost content={\"Copy to Clipboard\"} directionalHint={DirectionalHint.bottomCenter}>\n          <IconButton\n            iconProps={{ iconName: \"Copy\" }}\n            onClick={() => {\n              copyToClipboard(v.toString())\n            }}\n          />\n        </TooltipHost>\n      </Stack>\n    )\n  }\n\n  switch (typeof v) {\n    case \"boolean\":\n      return <Toggle label={label} checked={v} />\n    default:\n      return (\n        <TextField\n          readOnly\n          canRevealPassword\n          type={type}\n          multiline={v.toString().includes(\"\\n\")}\n          rows={clamp(v.toString().split(\"\\n\").length, 0, 10)}\n          value={v.toString()}\n          onRenderLabel={() => onRenderLabel()}\n        />\n      )\n  }\n}\n\nexport type IObjectView = { contentType: Language; content: string }\nexport const ObjectView: React.FC<IObjectView> = ({ contentType, content }) => {\n  const contentObject = useMemo(() => {\n    try {\n      switch (contentType) {\n        case \"json\":\n          return JSON.parse(content)\n        case \"yaml\":\n          return YAML.parse(content)\n      }\n    } catch (e) {\n      console.log(e)\n      return {}\n    }\n  }, [contentType])\n\n  const mapValue = (key: string, value: any) => {\n    if (isObject(value)) {\n      return <ObjectField key={key} title={key} object={value} depth={1} />\n    } else {\n      return <KeyValueField key={key} k={key} v={value} />\n    }\n  }\n\n  return (\n    <Stack tokens={{ childrenGap: \"1rem\", padding: \"1rem\" }}>\n      <ErrorBoundary>{map(contentObject, (v, k) => mapValue(k, v))}</ErrorBoundary>\n    </Stack>\n  )\n}\n","import React, { MutableRefObject, useEffect, useRef, useState } from \"react\"\nimport Editor, { Monaco } from \"@monaco-editor/react\"\nimport { editor, KeyCode, KeyMod } from \"monaco-editor\"\n\nimport { format } from \"prettier/standalone\"\nimport markdown from \"prettier/parser-markdown\"\nimport yaml from \"prettier/parser-yaml\"\nimport babel from \"prettier/parser-babel\"\nimport YAML from \"yaml\"\nimport { useTheme } from \"@fluentui/react-theme-provider\"\nimport { useSubject } from \"../../@react-hooks\"\n\nexport type IEditorBox = {\n  language: string\n  defaultValue: string\n  onLanguageChange: (newLanguage: string) => void\n  onChanges?: (content: string) => void\n  onSave?: () => void\n  editorRef?: MutableRefObject<editor.IStandaloneCodeEditor | undefined>\n  monacoRef?: MutableRefObject<Monaco | undefined>\n}\nexport const EditorBox: React.FC<IEditorBox> = ({\n  language,\n  defaultValue,\n  onLanguageChange,\n  onChanges,\n  onSave,\n  editorRef,\n  monacoRef,\n}) => {\n  const [trigger, setTrigger] = useState<number>()\n  const _eRef = useRef<editor.IStandaloneCodeEditor>()\n  const _mRef = useRef<Monaco>()\n  const { isInverted } = useTheme()\n  const [currentContent, setCurrentContent] = useState(defaultValue)\n  const [saveEvents, { next: emitSave }] = useSubject()\n\n  useEffect(() => {\n    const sxn = saveEvents.subscribe(() => {\n      onSave && onSave()\n    })\n\n    return () => {\n      sxn.unsubscribe()\n    }\n  }, [onSave, _eRef.current])\n\n  useEffect(() => {\n    onChanges && onChanges(currentContent)\n  }, [currentContent])\n\n  useEffect(() => {\n    const saveAction = _eRef.current?.addAction({\n      id: \"app-save\",\n      label: \"Save Changes\",\n      contextMenuGroupId: \"1_modification\",\n      contextMenuOrder: 2,\n      keybindings: [KeyMod.CtrlCmd | KeyCode.KEY_S],\n      run() {\n        emitSave()\n      },\n    })\n\n    return () => {\n      saveAction?.dispose()\n    }\n  }, [_eRef.current, saveEvents])\n\n  useEffect(() => {\n    const makePrettierAction = _eRef.current?.addAction({\n      id: \"app-prettier-format\",\n      label: \"Reformat with Prettier\",\n      contextMenuGroupId: \"1_modification\",\n      contextMenuOrder: 1,\n      keybindings: [KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KEY_F],\n      run(editor: editor.ICodeEditor): void | Promise<void> {\n        editor.setValue(\n          format(editor.getValue(), {\n            parser: language,\n            plugins: [markdown, yaml, babel],\n          })\n        )\n      },\n    })\n\n    return () => {\n      makePrettierAction?.dispose()\n    }\n  }, [language, _eRef.current, trigger])\n\n  const handleEditorDidMount = (editor: editor.IStandaloneCodeEditor, monaco: Monaco) => {\n    _eRef.current = editor\n    _mRef.current = monaco\n\n    if (editorRef) {\n      editorRef.current = editor\n    }\n    if (monacoRef) {\n      monacoRef.current = monaco\n    }\n\n    editor.addAction({\n      id: \"app-yaml-2-json\",\n      label: \"Convert: YAML > JSON\",\n      contextMenuGroupId: \"1_modification\",\n      contextMenuOrder: 2,\n      run(e: editor.ICodeEditor): void | Promise<void> {\n        e.setValue(JSON.stringify(YAML.parse(e.getValue()), null, 2))\n        onLanguageChange(\"json\")\n      },\n    })\n\n    editor.addAction({\n      id: \"app-json-2-yaml\",\n      label: \"Convert: JSON > YAML\",\n      contextMenuGroupId: \"1_modification\",\n      contextMenuOrder: 3,\n      run(e: editor.ICodeEditor): void | Promise<void> {\n        e.setValue(YAML.stringify(JSON.parse(e.getValue())))\n        onLanguageChange(\"yaml\")\n      },\n    })\n\n    setTrigger(new Date().getTime())\n  }\n\n  return (\n    <Editor\n      theme={isInverted ? \"vs-dark\" : \"vs-light\"}\n      options={{\n        fontSize: 14,\n        wordWrap: \"off\",\n        fontLigatures: true,\n        multiCursorModifier: \"alt\",\n        lineNumbers: \"off\",\n        minimap: {\n          enabled: false,\n        },\n        scrollBeyondLastLine: false,\n        scrollbar: {\n          verticalScrollbarSize: 6,\n          verticalSliderSize: 6,\n        },\n      }}\n      language={language}\n      onMount={handleEditorDidMount}\n      defaultValue={defaultValue}\n      onChange={(value) => {\n        setCurrentContent(value || \"\")\n      }}\n    />\n  )\n}\n","import { Observable, Subject } from \"rxjs\"\n\nexport type IuseSubjectCallbacks<T> = {\n  next: (value?: T) => void\n}\n\nexport const useSubject = <T>(): [Observable<T>, IuseSubjectCallbacks<T>] => {\n  const subject = new Subject<T>()\n\n  const next = (value?: T) => {\n    subject.next(value)\n  }\n\n  return [subject, { next }]\n}\n","import React from \"react\"\nimport { Dropdown, Stack } from \"@fluentui/react\"\nimport { useTheme } from \"@fluentui/react-theme-provider\"\nimport { EditorBox } from \"../../../components\"\nimport { Language } from \"../../../types\"\n\nconst selectLanguageOptions = [\n  { key: \"markdown\", text: \"Markdown\" },\n  { key: \"json\", text: \"JSON\" },\n  { key: \"yaml\", text: \"YAML\" },\n]\n\nexport type IEditView = {\n  language: Language\n  onLanguageChange: (newLanguage: Language) => void\n  content?: string\n  onContentChange: (newContent: string) => void\n  onSave: () => void\n}\nexport const EditView: React.FC<IEditView> = ({\n  language,\n  onLanguageChange,\n  content,\n  onContentChange,\n  onSave,\n}) => {\n  const { palette } = useTheme()\n\n  return (\n    <Stack\n      style={{ flex: \"auto\" }}\n      styles={{\n        root: {\n          color: `${palette.black} !important`,\n        },\n      }}\n    >\n      <EditorBox\n        language={language}\n        onLanguageChange={(language: string) => onLanguageChange(language as Language)}\n        defaultValue={content || \"\"}\n        onChanges={onContentChange}\n        onSave={onSave}\n      />\n      <Stack horizontal className=\"p-2 justify-content-end\">\n        <Dropdown\n          options={selectLanguageOptions}\n          selectedKey={language}\n          onChange={(event, option) =>\n            option?.key && onLanguageChange(option.key.toString() as Language)\n          }\n        />\n      </Stack>\n    </Stack>\n  )\n}\n","import React from \"react\"\nimport { TextField } from \"@fluentui/react\"\n\nexport type ITitle = {\n  value: string\n  onChange: (newTitle: string) => void\n}\nexport const Title: React.FC<ITitle> = ({ value, onChange }) => {\n  return (\n    <TextField label=\"Title\" onChange={({ target }: any) => onChange(target.value)} value={value} />\n  )\n}\n","import React from \"react\"\nimport { IBasePickerSuggestionsProps, Label, Stack, TagPicker } from \"@fluentui/react\"\n\nconst pickerSuggestionsProps: IBasePickerSuggestionsProps = {\n  suggestionsHeaderText: \"Suggested labels\",\n}\n\nexport type ILabels = {\n  onChange: (labels: string[]) => void\n  labels?: string[]\n  availableLabels?: string[]\n  noLabel?: boolean\n}\nexport const Labels: React.FC<ILabels> = ({ noLabel, onChange, labels, availableLabels = [] }) => {\n  return (\n    <Stack>\n      {!noLabel && <Label>Labels</Label>}\n      <TagPicker\n        styles={{ text: { border: \"none\" } }}\n        selectedItems={labels?.map((label) => ({ key: label, name: label }))}\n        pickerSuggestionsProps={pickerSuggestionsProps}\n        onResolveSuggestions={(filter) => {\n          const matchingLabels = availableLabels\n            .filter((label) => label.startsWith(filter))\n            .map((label) => ({\n              key: label,\n              name: label,\n            }))\n\n          return [\n            ...matchingLabels,\n            {\n              key: filter,\n              name: filter,\n            },\n          ]\n        }}\n        onChange={(items) => {\n          onChange(items?.map(({ key }) => key.toString()) || [])\n        }}\n      />\n    </Stack>\n  )\n}\n","import React from \"react\"\nimport { Panel, Stack } from \"@fluentui/react\"\nimport { Title } from \"./Title\"\nimport { Labels } from \"./Labels\"\n\nexport type IScrapDetails = {\n  isOpen: boolean\n  onDismiss: () => void\n  title: string\n  onTitleChange: (newTitle: string) => void\n  labels: string[]\n  onLabelsChange: (newLabels: string[]) => void\n}\nexport const ScrapDetails: React.FC<IScrapDetails> = ({\n  isOpen,\n  onDismiss,\n  title,\n  onTitleChange,\n  labels,\n  onLabelsChange,\n}) => {\n  return (\n    <Panel\n      isLightDismiss\n      headerText=\"Details\"\n      isOpen={isOpen}\n      onDismiss={onDismiss}\n      closeButtonAriaLabel=\"Close\"\n    >\n      <Stack style={{ paddingTop: \"0.5rem\" }} tokens={{ childrenGap: \"0.5rem\" }}>\n        <Title value={title} onChange={onTitleChange} />\n        <Labels labels={labels} onChange={onLabelsChange} />\n      </Stack>\n    </Panel>\n  )\n}\n","import React, { useCallback, useEffect, useState } from \"react\"\nimport { useHistory, useParams } from \"react-router-dom\"\nimport { Breadcrumb, MessageBarType, Pivot, PivotItem, Stack } from \"@fluentui/react\"\nimport styled from \"styled-components\"\nimport { useScrapOperations, useScrapSubscription } from \"../../database\"\nimport { fdAlert } from \"../../@ui-kit\"\nimport { ActionBar } from \"./components/ActionBar\"\nimport { MarkdownView } from \"./components/MarkdownView\"\nimport { ObjectView } from \"./components/ObjectView\"\nimport { EditView } from \"./components/EditView\"\nimport { ScrapDetails } from \"./components/ScrapDetails\"\nimport { useBoolean } from \"@fluentui/react-hooks\"\nimport { useHotkeys } from \"react-hotkeys-hook\"\nimport { Labels } from \"./components/Labels\"\nimport { useToasts } from \"../../@ui-kit/notifications/useToasts\"\n\nconst ScrapTabs = styled(Pivot)`\n  display: flex;\n  flex-direction: column;\n  flex: auto;\n  overflow: hidden;\n\n  & > div[role=\"tabpanel\"] {\n    display: flex;\n    flex: auto;\n    overflow-y: scroll;\n    overflow-x: hidden;\n  }\n\n  & > div[role=\"tabpanel\"] > .scrap-tab {\n    display: flex;\n    flex: auto;\n    flex-direction: column;\n    padding: 0.5rem;\n    overflow-x: hidden;\n  }\n`\n\nexport const ScrapPage: React.FC = () => {\n  const [detailsIsOpen, { toggle: toggleDetails }] = useBoolean(false)\n  const { push } = useHistory()\n  const { id } = useParams()\n  const [scrap, { error }] = useScrapSubscription({ id })\n  const { save } = useScrapOperations()\n  const [liveTitle, setLiveTitle] = useState(scrap?.name)\n  const [liveContent, setLiveContent] = useState(scrap?.content)\n  const [contentType, setContentType] = useState(scrap?.contentType)\n  const [labels, setLabels] = useState(scrap?.labels || [])\n  const { showToast } = useToasts()\n\n  useEffect(() => {\n    if (scrap) {\n      setLiveTitle(scrap.name)\n      setLiveContent(scrap.content)\n      setContentType(scrap.contentType)\n      setLabels(scrap.labels)\n    }\n  }, [scrap])\n\n  useEffect(() => {\n    if (error) {\n      fdAlert({\n        title: \"Failed to get Scrap\",\n        text: error,\n      }).then(() => push(\"/\"))\n    }\n  }, [scrap, error])\n\n  const handleSave = useCallback(() => {\n    if (scrap && liveTitle && contentType) {\n      save({\n        ...scrap,\n        name: liveTitle,\n        content: liveContent || \"\",\n        contentType,\n        labels: labels,\n      })\n        .catch((e) => {\n          fdAlert({ title: \"Failed to Save\", text: e.message })\n        })\n        .then(() => {\n          showToast(\"Saved\", { type: MessageBarType.success })\n        })\n    } else {\n      fdAlert({ title: \"Failed to Save\", text: \"No Content Type Defined\" })\n    }\n  }, [liveTitle, liveContent, contentType, labels])\n\n  useHotkeys(\n    \"ctrl+s\",\n    () => {\n      handleSave()\n    },\n    [liveTitle, labels, liveContent, contentType]\n  )\n\n  return (\n    <Stack style={{ flex: \"auto\", overflow: \"hidden\" }}>\n      {scrap && contentType && (\n        <>\n          <ActionBar onSave={handleSave} onDetails={toggleDetails} />\n          <Stack style={{ overflow: \"hidden\" }} className=\"container flex-fill\">\n            <Stack\n              style={{\n                display: \"grid\",\n                gridTemplateRows: \"1fr 1fr\",\n                alignItems: \"center\",\n              }}\n            >\n              <Breadcrumb\n                style={{ minWidth: \"50%\" }}\n                items={[\n                  { key: \"scraps\", text: \"Scraps\", onClick: () => push(\"/scraps\") },\n                  { key: \"scrap\", text: scrap.name },\n                ]}\n              />\n              <Labels noLabel onChange={setLabels} labels={labels} />\n            </Stack>\n            <ScrapDetails\n              isOpen={detailsIsOpen}\n              onDismiss={toggleDetails}\n              title={liveTitle || \"\"}\n              onTitleChange={setLiveTitle}\n              labels={labels}\n              onLabelsChange={setLabels}\n            />\n            <ScrapTabs>\n              <PivotItem className=\"scrap-tab\" headerText=\"View\" itemIcon=\"TextDocument\">\n                {(() => {\n                  switch (contentType) {\n                    case \"markdown\":\n                      return <MarkdownView contentType={contentType} content={liveContent || \"\"} />\n                    case \"yaml\":\n                    case \"json\":\n                      return <ObjectView contentType={contentType} content={liveContent || \"\"} />\n                  }\n                })()}\n              </PivotItem>\n              <PivotItem className=\"scrap-tab\" headerText=\"Edit\" itemIcon=\"FileCode\">\n                <EditView\n                  language={contentType}\n                  onLanguageChange={setContentType}\n                  content={liveContent}\n                  onContentChange={setLiveContent}\n                  onSave={() => {\n                    handleSave()\n                  }}\n                />\n              </PivotItem>\n            </ScrapTabs>\n          </Stack>\n        </>\n      )}\n    </Stack>\n  )\n}\n","import { useEffect, useState } from \"react\"\nimport { useCollection } from \"../hooks\"\nimport { ScrapEntity } from \"../../types\"\nimport { toScrapEntity } from \"./mappers\"\n\nexport const useScrapSubscription = ({\n  id,\n}: {\n  id: string\n}): [ScrapEntity | undefined, { error?: string }] => {\n  const collection = useCollection<ScrapEntity>(\"scraps\")\n  const [result, setResult] = useState<ScrapEntity | undefined>()\n  const [error, setError] = useState<string | undefined>()\n\n  useEffect(() => {\n    if (id) {\n      collection.findOne({ selector: { id } }).$.subscribe((result) => {\n        if (result) {\n          setResult(toScrapEntity(result))\n        } else {\n          setError(`Unable to fetch Scrap with id ${id}`)\n          setResult(undefined)\n        }\n      })\n    } else {\n      throw new Error(\"Scrap ID is not defined!!, failed to fetch data\")\n    }\n  }, [collection, id])\n\n  return [result, { error }]\n}\n","import { useContext } from \"react\"\nimport { ToastContext } from \"./ToastProvider\"\n\nexport const useToasts = () => {\n  return useContext(ToastContext)\n}\n","import React, { useMemo } from \"react\"\nimport { Route, Switch, useHistory } from \"react-router-dom\"\nimport styled from \"styled-components\"\nimport { useBoolean } from \"@fluentui/react-hooks\"\nimport { PrimaryButton } from \"@fluentui/react\"\nimport { DatabaseProvider, InitPhase, scrapsCollection, useDatabaseInitializer } from \"./database\"\nimport { RxCollectionCreatorBase } from \"rxdb/dist/types/types\"\nimport { Provider } from \"react-redux\"\nimport { AppThemeProvider, AutoStack, ToastProvider, useThemeController } from \"./@ui-kit\"\nimport { store } from \"./app/store\"\nimport { AppBar } from \"./components/app-bar/AppBar\"\nimport { SideNav } from \"./nav\"\nimport { ScrapListPage, ScrapPage } from \"./pages\"\n\nconst DATABASE_NAME = \"scrappydb\"\nconst SCHEMAS: Record<string, RxCollectionCreatorBase> = {\n  scraps: scrapsCollection,\n}\n\nconst DATABASE_OPTS = { inMemory: false, password: undefined }\n\nconst AppContainer = styled.div`\n  flex: auto;\n  display: grid;\n  grid-template-rows: 48px auto;\n  overflow: hidden;\n`\n\nconst Main = styled.main`\n  display: flex;\n  flex: auto;\n  overflow: inherit;\n`\n\nconst App = () => {\n  const { push } = useHistory()\n  const [initPhase, transitionTo] = useDatabaseInitializer()\n  const [isOpen, { setTrue: openPanel, setFalse: dismissPanel }] = useBoolean(false)\n  const [theme, { nextTheme }] = useThemeController()\n\n  const phaseTransitions = useMemo(\n    () => ({\n      [InitPhase.LOCKED]: transitionTo.unlocking,\n      [InitPhase.UNLOCKING]: transitionTo.locked,\n      [InitPhase.UNLOCKED]: transitionTo.locked,\n    }),\n    []\n  )\n\n  return (\n    <AppThemeProvider userTheme={theme}>\n      <Provider store={store}>\n        <AppContainer>\n          <AppBar\n            theme={theme}\n            onToggleTheme={nextTheme}\n            onBurger={openPanel}\n            unlocked={initPhase === InitPhase.UNLOCKED}\n            onToggleLock={phaseTransitions[initPhase]}\n            onBrand={() => push(\"/\")}\n          />\n          <Main>\n            <ToastProvider>\n              {(() => {\n                switch (initPhase) {\n                  case InitPhase.LOCKED:\n                    return (\n                      <AutoStack horizontalAlign=\"center\" verticalAlign=\"center\">\n                        <PrimaryButton onClick={transitionTo.unlocking} text=\"Unlock\" />\n                      </AutoStack>\n                    )\n                  case InitPhase.UNLOCKING:\n                  case InitPhase.UNLOCKED:\n                    return (\n                      <DatabaseProvider\n                        databaseName={DATABASE_NAME}\n                        schemas={SCHEMAS}\n                        options={DATABASE_OPTS}\n                        lockState={initPhase}\n                        onLock={transitionTo.locked}\n                        onUnlock={transitionTo.unlocked}\n                      >\n                        <Switch>\n                          <Route path=\"/scrap/:id\" component={ScrapPage} />\n                          <Route path=\"/\" component={ScrapListPage} />\n                        </Switch>\n                      </DatabaseProvider>\n                    )\n                }\n              })()}\n            </ToastProvider>\n          </Main>\n        </AppContainer>\n        <SideNav isOpen={isOpen} onDismiss={dismissPanel} />\n      </Provider>\n    </AppThemeProvider>\n  )\n}\n\nexport default App\n","export const scrapsCollection = {\n  schema: {\n    title: \"Scrappy Scrap Schema\",\n    version: 0,\n    description: \"Scrap of information\",\n    type: \"object\",\n    properties: {\n      id: {\n        type: \"string\",\n        primary: true,\n      },\n      created: {\n        type: \"number\",\n      },\n      groupName: {\n        type: \"string\",\n      },\n      name: {\n        type: \"string\",\n        default: \"Unnamed Scrap...\",\n      },\n      labels: {\n        type: \"array\",\n        uniqueItems: true,\n        items: {\n          type: \"string\",\n        },\n      },\n      contentType: {\n        type: \"string\",\n        default: \"markdown\",\n      },\n      content: {\n        type: \"string\",\n        default: \"New Scrap...\",\n      },\n      starred: {\n        type: \"boolean\",\n        default: false,\n      },\n      locked: {\n        type: \"boolean\",\n        default: false,\n      },\n      archived: {\n        type: \"boolean\",\n        default: false,\n      },\n    },\n    required: [\"id\", \"created\", \"name\"],\n    indexes: [\"id\", \"created\", \"name\"],\n    encrypted: [\"name\", \"content\"],\n    attachments: {\n      encrypted: true,\n    },\n  },\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\")\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import \"./index.scss\"\nimport React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport { HashRouter } from \"react-router-dom\"\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"app-root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}